'use strict';
const _0x59ca8d = _0x3870;
(function (_0x139a8d, _0x36c8d4) {
    const _0x536a36 = _0x3870, _0xdab86d = _0x139a8d();
    while (!![]) {
        try {
            const _0x27fb03 = parseInt(_0x536a36(0x249)) / 0x1 + -parseInt(_0x536a36(0x1c3)) / 0x2 + parseInt(_0x536a36(0x1cc)) / 0x3 + -parseInt(_0x536a36(0x1eb)) / 0x4 + -parseInt(_0x536a36(0x210)) / 0x5 * (-parseInt(_0x536a36(0x20c)) / 0x6) + -parseInt(_0x536a36(0x1fd)) / 0x7 * (parseInt(_0x536a36(0x1af)) / 0x8) + -parseInt(_0x536a36(0x24e)) / 0x9 * (parseInt(_0x536a36(0x1d5)) / 0xa);
            if (_0x27fb03 === _0x36c8d4)
                break;
            else
                _0xdab86d['push'](_0xdab86d['shift']());
        } catch (_0x4337a6) {
            _0xdab86d['push'](_0xdab86d['shift']());
        }
    }
}(_0x4c8d, 0xf0f8d));
const {
        appendFileSync: _0x2164c2,
        writeFileSync: _0x1f16d0,
        readFileSync: _0x427944
    } = require('fs'), {createInterface: _0x2f7db5} = require(_0x59ca8d(0x19c)), {isNullOrUndefined: _0xa749f9} = require('util'), _0x4d0ff9 = require(_0x59ca8d(0x1c5)), _0x63da74 = require(_0x59ca8d(0x1dc)), _0x977186 = require(_0x59ca8d(0x1d2)), _0xffdb4b = require('./fetch-cache.js'), _0x547f5a = !!_0x4d0ff9[_0x59ca8d(0x23d)]['stop'], _0x4b9600 = _0x4d0ff9[_0x59ca8d(0x23d)]['resume'] || 0x0, _0x175f1f = _0x4d0ff9[_0x59ca8d(0x23d)][_0x59ca8d(0x242)] || _0x59ca8d(0x1a2), _0x2435d7 = _0x4d0ff9[_0x59ca8d(0x23d)][_0x59ca8d(0x1bb)] || _0x59ca8d(0x1f8), _0x2adf58 = _0x4d0ff9[_0x59ca8d(0x23d)]['output'] || 'log.txt', _0x22131a = _0x4d0ff9[_0x59ca8d(0x23d)]['api_key'], _0x106ecc = _0x4d0ff9[_0x59ca8d(0x23d)][_0x59ca8d(0x25b)], _0x1fa925 = _0x4d0ff9['argv']['proxy'], _0x28654c = !!_0x4d0ff9[_0x59ca8d(0x23d)]['verbose'], _0x56aff9 = !!_0x4d0ff9[_0x59ca8d(0x23d)]['log_opensea'], _0x416683 = !!_0x4d0ff9['argv']['log_fetch'], _0x147f01 = !!_0x4d0ff9[_0x59ca8d(0x23d)][_0x59ca8d(0x1ba)], _0x5dc4e5 = !!_0x4d0ff9['argv'][_0x59ca8d(0x1b1)], _0x411c2e = _0x59ca8d(0x205), _0x3756e7 = _0x59ca8d(0x1a4), _0x387257 = _0x59ca8d(0x216);
var _0x4cbbab, _0x55848b, _0x2ea6f4, _0x3286f9 = 0x0, _0x42a465 = _0x4b9600, _0x38768b = ![], _0x168a11 = [], _0x20a61c = 0x0;
function _0x9f6796(_0xee594) {
    const _0x33f6dd = _0x59ca8d;
    _0x28654c && console[_0x33f6dd(0x253)](_0xee594), _0x2164c2(_0x2adf58, _0xee594 + '\x0a');
}
function _0x12ed94(_0xcc3cbf) {
    const _0x1512e2 = _0x59ca8d;
    let _0x5ce714 = '';
    try {
        _0x5ce714 = '\x0a' + (_0xcc3cbf[_0x1512e2(0x1cf)] ? _0xcc3cbf[_0x1512e2(0x1cf)] : _0xcc3cbf[_0x1512e2(0x227)] ? _0x1512e2(0x223) + _0xcc3cbf[_0x1512e2(0x227)] : '' + _0xcc3cbf);
    } catch (_0xfce9a1) {
        _0x5ce714 = _0xcc3cbf;
    }
    _0x28654c && console['error'](_0x5ce714), _0x2164c2(_0x2adf58, _0x5ce714 + '\x0a');
}
function _0x378902(_0x3c7a9b) {
    const _0x3d0c18 = _0x59ca8d;
    return _0x3c7a9b === _0x3d0c18(0x25d) || _0x3c7a9b === 'live' ? 'mainnet' : _0x3d0c18(0x1ad);
}
function _0x29fcea() {
    const _0x1d401d = _0x59ca8d;
    try {
        _0x9f6796('\x0aInit\x20config...');
        var _0x1f2be5 = JSON[_0x1d401d(0x23f)](_0x427944(_0x2435d7));
        return _0x1f2be5['is_infura'] = 'infura_key' in _0x1f2be5, _0x1f2be5[_0x1d401d(0x1c6)] = _0x1f2be5[_0x1d401d(0x26e)] || _0x1f2be5[_0x1d401d(0x1fa)], !!_0x1f2be5[_0x1d401d(0x240)] && (_0x1f2be5[_0x1d401d(0x240)] = _0x378902(_0x1f2be5[_0x1d401d(0x240)])), !(_0x1d401d(0x235) in _0x1f2be5) && (_0x1f2be5['delay'] = 0x1388), !(_0x1d401d(0x1bf) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x1bf)] = 0.5), !('random_delay' in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x208)] = 0x0), !(_0x1d401d(0x22c) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x22c)] = 0x18), !(_0x1d401d(0x1b3) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x1b3)] = !![]), !(_0x1d401d(0x215) in _0x1f2be5) && (_0x1f2be5['skip_if_too_low'] = ![]), !(_0x1d401d(0x201) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x201)] = !![]), !(_0x1d401d(0x19e) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x19e)] = !![]), !(_0x1d401d(0x1d7) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x1d7)] = ![]), !(_0x1d401d(0x1de) in _0x1f2be5) && (_0x1f2be5['switch_threshold'] = 0xa), !(_0x1d401d(0x250) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x250)] = 0xa), !('gas_price_addition' in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x209)] = 0x3), !(_0x1d401d(0x246) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x246)] = !![]), !(_0x1d401d(0x23e) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x23e)] = 0.0001), !(_0x1d401d(0x22e) in _0x1f2be5) && (_0x1f2be5['price_floor'] = 0.0001), !(_0x1d401d(0x22d) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x22d)] = 0x1), !(_0x1d401d(0x231) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x231)] = 0.1), !('proxy_protocol' in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x226)] = _0x1d401d(0x1d9)), !(_0x1d401d(0x22f) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x22f)] = !![]), !(_0x1d401d(0x1cb) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x1cb)] = 0x7d0), !(_0x1d401d(0x1ab) in _0x1f2be5) && (_0x1f2be5['log_opensea'] = ![]), !(_0x1d401d(0x1b5) in _0x1f2be5) && (_0x1f2be5['log_fetch'] = ![]), !(_0x1d401d(0x1ba) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x1ba)] = ![]), !(_0x1d401d(0x1b1) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x1b1)] = ![]), !(_0x1d401d(0x1bc) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x1bc)] = 0x5), !(_0x1d401d(0x23b) in _0x1f2be5) && (_0x1f2be5['fetch_timeout'] = 0x2710), !(_0x1d401d(0x1c8) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x1c8)] = 0xea60), !(_0x1d401d(0x1a1) in _0x1f2be5) && (_0x1f2be5[_0x1d401d(0x1a1)] = 0x2710), _0x1d401d(0x1ab) in _0x4d0ff9[_0x1d401d(0x23d)] && (_0x1f2be5[_0x1d401d(0x1ab)] = _0x56aff9), _0x1d401d(0x1b5) in _0x4d0ff9[_0x1d401d(0x23d)] && (_0x1f2be5[_0x1d401d(0x1b5)] = _0x416683), _0x1d401d(0x1ba) in _0x4d0ff9[_0x1d401d(0x23d)] && (_0x1f2be5[_0x1d401d(0x1ba)] = _0x147f01), 'log_full' in _0x4d0ff9[_0x1d401d(0x23d)] && (_0x1f2be5[_0x1d401d(0x1b1)] = _0x5dc4e5), _0x22131a && (_0x1f2be5[_0x1d401d(0x248)] = _0x22131a), _0x106ecc && (_0x1f2be5[_0x1d401d(0x1a9)] = _0x106ecc), _0x1fa925 && (_0x1f2be5['proxy_list'] = _0x1fa925), _0x1f2be5;
    } catch (_0x28f382) {
        _0x12ed94(_0x28f382);
    }
    return {};
}
function _0x4782e5(_0x4d9a38) {
    const _0x543e0b = _0x59ca8d;
    let _0x118610 = !![];
    return !('network' in _0x4d9a38) && (_0x9f6796('Missing\x20network\x20name.'), _0x118610 = ![]), !('mnemonic' in _0x4d9a38) && !(_0x543e0b(0x236) in _0x4d9a38) && (_0x9f6796(_0x543e0b(0x26d)), _0x118610 = ![]), !(_0x543e0b(0x1f4) in _0x4d9a38) && _0x543e0b(0x236) in _0x4d9a38 && _0x4d9a38[_0x543e0b(0x236)][_0x543e0b(0x264)] <= 0x0 && (_0x9f6796(_0x543e0b(0x212)), _0x118610 = ![]), !(_0x543e0b(0x1c6) in _0x4d9a38) && (_0x9f6796('Missing\x20blockchain\x20node\x20API\x20key.'), _0x118610 = ![]), !(_0x543e0b(0x1a9) in _0x4d9a38) && (_0x9f6796(_0x543e0b(0x1d3)), _0x118610 = ![]), _0x4d9a38[_0x543e0b(0x235)] < 0x0 && (_0x9f6796(_0x543e0b(0x204)), _0x118610 = ![]), _0x4d9a38[_0x543e0b(0x1bf)] < 0x0 && (_0x9f6796(_0x543e0b(0x1be)), _0x118610 = ![]), _0x4d9a38[_0x543e0b(0x1bf)] > 0x3 && (_0x9f6796(_0x543e0b(0x1a8)), _0x118610 = ![]), _0x4d9a38[_0x543e0b(0x208)] < 0x0 && (_0x9f6796(_0x543e0b(0x25a)), _0x118610 = ![]), _0x4d9a38['switch_delay'] < 0x0 && (_0x9f6796(_0x543e0b(0x1b6)), _0x118610 = ![]), _0x4d9a38[_0x543e0b(0x23b)] < 0x0 && (_0x9f6796(_0x543e0b(0x1f3)), _0x118610 = ![]), _0x4d9a38[_0x543e0b(0x1c8)] < 0x0 && (_0x9f6796(_0x543e0b(0x218)), _0x118610 = ![]), _0x4d9a38['process_timeout'] < 0x0 && (_0x9f6796('Invalid\x20process\x20timeout.'), _0x118610 = ![]), _0x4d9a38[_0x543e0b(0x1bc)] < 0x0 && (_0x9f6796(_0x543e0b(0x233)), _0x118610 = ![]), _0x4d9a38[_0x543e0b(0x209)] < 0x0 && (_0x9f6796(_0x543e0b(0x1fe)), _0x118610 = ![]), _0x4d9a38[_0x543e0b(0x22e)] < 0x0 && _0x9f6796(_0x543e0b(0x24b)), (_0x4d9a38['price_roof'] < 0x0 || _0x4d9a38['price_roof'] < _0x4d9a38[_0x543e0b(0x22e)]) && _0x9f6796(_0x543e0b(0x254)), _0x4d9a38[_0x543e0b(0x23e)] < 0x0 && (_0x9f6796(_0x543e0b(0x1fb)), _0x118610 = ![]), (_0x4d9a38[_0x543e0b(0x231)] < 0x0 || _0x4d9a38['price_increment_factor'] > 0x1) && (_0x9f6796(_0x543e0b(0x1c0)), _0x118610 = ![]), _0x4d9a38[_0x543e0b(0x22c)] < 0x0 && (_0x9f6796('Invalid\x20expiration\x20time.'), _0x118610 = ![]), _0x118610;
}
function _0x3cedd2(_0x1ae158) {
    const _0x5b60cf = _0x59ca8d;
    _0x4cbbab[_0x5b60cf(0x1ab)] && _0x9f6796(_0x5b60cf(0x19d) + ('' + _0x1ae158)['replace']('\x0a', _0x5b60cf(0x1e8)));
}
function _0x3b663a(_0x8b7f15) {
    const _0x2109df = _0x59ca8d;
    try {
        let _0x4f5557 = _0x4cbbab[_0x2109df(0x226)], _0x255683 = _0x8b7f15[_0x2109df(0x273)]('\x20', '');
        _0x255683['includes']('//') && (_0x4f5557 = _0x255683[_0x2109df(0x273)](/\/\/.*$/g, '//'), _0x255683 = _0x255683[_0x2109df(0x273)](/^.*\/\//g, ''));
        if (_0x255683['includes']('@') && (_0x255683[_0x2109df(0x22b)](/\:/g) || [])['length'] == 0x2) {
            const _0x10532a = _0x255683[_0x2109df(0x273)](/.*@/, ''), _0x4a1310 = _0x255683[_0x2109df(0x273)]('@' + _0x10532a, '');
            if (!_0x4a1310 || _0x4a1310[_0x2109df(0x264)] == 0x0)
                return _0x9f6796('Error:\x20Invalid\x20proxy\x20syntax\x20-\x20' + _0x8b7f15 + '.'), {};
            if (!_0x10532a || _0x10532a[_0x2109df(0x264)] == 0x0)
                return _0x9f6796(_0x2109df(0x257) + _0x8b7f15 + '.'), {};
            const _0x248380 = _0x4a1310[_0x2109df(0x1c4)](':'), _0x4a089a = _0x10532a[_0x2109df(0x1c4)](':');
            if (_0x248380[_0x2109df(0x264)] != 0x2)
                return _0x9f6796(_0x2109df(0x257) + _0x8b7f15 + '.'), {};
            if (_0x4a089a[_0x2109df(0x264)] != 0x2)
                return _0x9f6796(_0x2109df(0x257) + _0x8b7f15 + '.'), {};
            return {
                'protocol': _0x4f5557,
                'user': _0x248380[0x0],
                'pass': _0x248380[0x1],
                'host': _0x4a089a[0x0],
                'port': parseInt(_0x4a089a[0x1])
            };
        }
        const _0x4a4f58 = _0x255683['split'](':');
        if (_0x4a4f58[_0x2109df(0x264)] == 0x2)
            return {
                'protocol': _0x4f5557,
                'host': _0x4a4f58[0x0],
                'port': parseInt(_0x4a4f58[0x1])
            };
        if (_0x4a4f58[_0x2109df(0x264)] == 0x4)
            return {
                'protocol': _0x4f5557,
                'user': _0x4a4f58[0x2],
                'pass': _0x4a4f58[0x3],
                'host': _0x4a4f58[0x0],
                'port': parseInt(_0x4a4f58[0x1])
            };
    } catch (_0x52e9f2) {
        _0x12ed94(_0x52e9f2);
    }
    return _0x9f6796(_0x2109df(0x257) + _0x8b7f15 + '.'), {};
}
function _0x1ad6cb() {
    const _0x41f521 = _0x59ca8d;
    if (_0x63da74['globalAgent'])
        _0x63da74[_0x41f521(0x25c)]['destroy']();
    if (_0x977186[_0x41f521(0x25c)])
        _0x977186['globalAgent'][_0x41f521(0x268)]();
}
function _0x12ae51(_0x108cdd, _0x1024bd) {
    const _0x50ff4b = _0x59ca8d;
    _0x1ad6cb(), _0x63da74['globalAgent'] = _0x108cdd, _0x977186[_0x50ff4b(0x25c)] = _0x1024bd;
}
function _0x5ef7bf(_0x10c9f1) {
    const _0x4d6de0 = _0x59ca8d;
    _0x1ad6cb(), _0x63da74[_0x4d6de0(0x25c)] = _0x10c9f1, _0x977186['globalAgent'] = _0x10c9f1;
}
function _0x5674b7() {
    const _0x39bd24 = _0x59ca8d;
    _0x1ad6cb(), _0x63da74[_0x39bd24(0x25c)] = new _0x63da74[(_0x39bd24(0x20f))](), _0x977186['globalAgent'] = new _0x977186[(_0x39bd24(0x20f))]();
}
function _0x1062c9(_0x2ca1f6, _0x495732) {
    const _0x39de1d = _0x59ca8d;
    try {
        const _0x39d024 = _0x3b663a(_0x495732);
        if (_0x39d024 && _0x39d024 !== {}) {
            let _0x21e1a6;
            _0x39d024[_0x39de1d(0x256)] && _0x39d024[_0x39de1d(0x256)][_0x39de1d(0x264)] > 0x0 ? _0x21e1a6 = '' + _0x39d024[_0x39de1d(0x224)] + _0x39d024[_0x39de1d(0x256)] + ':' + _0x39d024[_0x39de1d(0x213)] + '@' + _0x39d024['host'] + ':' + _0x39d024[_0x39de1d(0x1a7)] : _0x21e1a6 = '' + _0x39d024[_0x39de1d(0x224)] + _0x39d024[_0x39de1d(0x21c)] + ':' + _0x39d024['port'];
            if (_0x39d024[_0x39de1d(0x224)][_0x39de1d(0x24d)](_0x39de1d(0x1dc))) {
                _0x12ae51(new require(_0x39de1d(0x24c))(_0x21e1a6), new require(_0x39de1d(0x222))(_0x21e1a6)), _0x9f6796(_0x39de1d(0x1ac) + _0x2ca1f6 + '\x20-\x20' + _0x39d024[_0x39de1d(0x224)] + _0x39d024['host'] + ':' + _0x39d024[_0x39de1d(0x1a7)]);
                return;
            }
            if (_0x39d024['protocol'][_0x39de1d(0x24d)](_0x39de1d(0x220))) {
                _0x5ef7bf(new require(_0x39de1d(0x21a))(_0x21e1a6)), _0x9f6796('\x0a\x20\x20\x20Switch\x20proxy\x20' + _0x2ca1f6 + _0x39de1d(0x23c) + _0x39d024[_0x39de1d(0x224)] + _0x39d024[_0x39de1d(0x21c)] + ':' + _0x39d024[_0x39de1d(0x1a7)]);
                return;
            }
            _0x9f6796(_0x39de1d(0x1dd) + _0x495732 + '.');
        }
        _0x5674b7();
    } catch (_0x4fff19) {
        _0x12ed94(_0x4fff19);
    }
}
function _0xe0ddc5() {
    const _0x59d3d6 = _0x59ca8d;
    _0x168a11 && _0x168a11[_0x59d3d6(0x264)] > 0x0 && (_0x20a61c = (_0x20a61c + 0x1) % _0x168a11[_0x59d3d6(0x264)], _0x1062c9(_0x20a61c + 0x1, _0x168a11[_0x20a61c]));
}
async function _0x46f6d7(_0x21200d) {
    const _0x40c4b3 = _0x59ca8d;
    if (_0x21200d <= 0x0)
        return;
    const _0x2195d4 = require(_0x40c4b3(0x267))[_0x40c4b3(0x1da)], _0x34f4c8 = new _0x2195d4();
    let _0x4a824e = await _0x34f4c8[_0x40c4b3(0x21f)]();
    setTimeout(() => {
        _0x4a824e();
    }, _0x21200d), _0x4a824e = await _0x34f4c8[_0x40c4b3(0x21f)](), _0x4a824e();
}
function _0x2caaaa(_0xea33a0, _0x1744e4) {
    return new Promise((_0x30c82f, _0x331aa6) => {
        const _0x570d7f = _0x3870;
        _0xea33a0 < 0x0 && _0x331aa6(_0x570d7f(0x202));
        const _0x303b7d = setTimeout(() => {
            const _0x295e09 = _0x570d7f;
            _0x331aa6(_0x295e09(0x202));
        }, _0xea33a0);
        _0x1744e4()['then'](_0x4d4057 => {
            clearTimeout(_0x303b7d), _0x30c82f(_0x4d4057);
        })[_0x570d7f(0x239)](_0x557dc3 => {
            clearTimeout(_0x303b7d), _0x331aa6(_0x557dc3);
        });
    });
}
async function _0x2b90eb() {
    const _0x45fb50 = _0x59ca8d;
    let _0x1aeb5d;
    try {
        _0x1aeb5d = await global['fetch'](_0x387257);
    } catch (_0xa3adb1) {
        try {
            _0x1aeb5d = await global[_0x45fb50(0x258)](_0x387257);
        } catch (_0xe55c3d) {
            return _0x12ed94(_0xe55c3d), _0x45fb50(0x252);
        }
    }
    try {
        let _0x32257d = await _0x1aeb5d['text'](), _0x2738aa = JSON[_0x45fb50(0x23f)](_0x32257d);
        if ('ip' in _0x2738aa)
            return _0x2738aa['ip'];
        _0x12ed94(_0x32257d);
    } catch (_0x5cea65) {
        _0x12ed94(_0x5cea65);
    }
    return _0x45fb50(0x252);
}
async function _0x24da09() {
    const _0x4d8d40 = _0x59ca8d;
    if (!_0x168a11 || _0x168a11[_0x4d8d40(0x264)] == 0x0)
        return;
    let _0x3c1a32 = ![];
    try {
        while (!_0x3c1a32) {
            _0x3c1a32 = !![], _0xe0ddc5();
            if (_0x4cbbab[_0x4d8d40(0x22f)] && global[_0x4d8d40(0x258)])
                try {
                    await global['fetch'](_0x3756e7);
                } catch (_0x5a48a4) {
                    try {
                        await global['fetch'](_0x3756e7);
                    } catch (_0x3cb810) {
                        _0x12ed94(_0x3cb810), _0x3c1a32 = ![];
                    }
                }
            !_0x3c1a32 && await _0x46f6d7(_0x4cbbab[_0x4d8d40(0x1cb)]);
        }
        let _0x26d8c5 = await _0x2b90eb();
        _0x9f6796(_0x4d8d40(0x22a) + _0x26d8c5);
    } catch (_0x4ae9f2) {
        _0x12ed94(_0x4ae9f2);
    }
}
function _0x11e28e(_0x534455) {
    const _0x1a4708 = _0x59ca8d;
    return _0x427944(_0x534455, _0x1a4708(0x1d4))['split']('\x0a')[_0x1a4708(0x1f0)](Boolean);
}
function _0x4c8d() {
    const _0x2b0a59 = [
        '\x0aDone.\x0a',
        '4305693PtcyPS',
        'Invalid\x20gas\x20price\x20addition.',
        'engine',
        '\x0a\x20%\x20Currency\x20approved',
        'skip_if_too_high',
        'Timeout\x20error.',
        '\x20Offer\x20succeed\x20with\x20errors.',
        'Invalid\x20delay.',
        '.stop',
        '\x0a\x20%\x20Order\x20cancelled',
        'ApproveAsset',
        'random_delay',
        'gas_price_addition',
        '\x0a\x20\x20\x20\x20\x20Address:\x20',
        'body',
        '432972eiSmOL',
        '@truffle/hdwallet-provider',
        '\x0a\x20!\x20',
        'Agent',
        '115pKLdsN',
        'currentPrice',
        'Private\x20keys\x20array\x20is\x20empty.',
        'pass',
        'Rinkeby',
        'skip_if_too_low',
        'https://api.ipify.org?format=json',
        'Error:\x20No\x20mnemonic\x20phrase\x20or\x20private\x20keys.',
        'Invalid\x20cache\x20timeput.',
        'WrapEth',
        'socks-proxy-agent',
        '\x0a\x20%\x20Transaction\x20failed',
        'host',
        'gas_price',
        '\x0a\x20%\x20Account\x20initialized',
        'acquire',
        'socks',
        'api',
        'https-proxy-agent',
        'Error:\x20',
        'protocol',
        'cloudflare',
        'proxy_protocol',
        'message',
        '\x0aStarting...',
        'opensea-js',
        '\x0a\x20\x20\x20Public\x20IP:\x20',
        'match',
        'expiration',
        'price_roof',
        'price_floor',
        'proxy_checking',
        '\x20Request\x20was\x20blocked\x20by\x20Cloudflare.',
        'price_increment_factor',
        'Fatal\x20error:\x20No\x20OpenSeaPort.',
        'Invalid\x20clear\x20cache\x20threshold.',
        'InitializeAccount',
        'delay',
        'private_keys',
        '\x0a\x20\x20\x20\x20\x20Id:\x20\x20\x20\x20\x20\x20',
        '.alchemyapi.io/v2/',
        'catch',
        '\x0a\x20%\x20Order\x20created',
        'fetch_timeout',
        '\x20-\x20',
        'argv',
        'price_epsilon',
        'parse',
        'network',
        'cookie',
        'file',
        'FetchTimeout',
        '.infura.io/v3/',
        '\x20Processing...',
        'price_auto',
        '\x0aHeaders:\x20',
        'api_key',
        '1804108JQGvAl',
        '\x20Offer\x20skipped.\x20Already\x20have\x20a\x20bid.',
        'Warning!\x20Invalid\x20price\x20floor.',
        'http-proxy-agent',
        'includes',
        '1763973wXBcqP',
        '\x0aBody:\x20',
        'discard_threshold',
        'ApproveAllAssets',
        'unknown',
        'log',
        'Warning!\x20Invalid\x20price\x20roof.',
        'toLowerCase',
        'user',
        'Error:\x20Invalid\x20proxy\x20syntax\x20-\x20',
        'fetch',
        'clear',
        'Invalid\x20random\x20delay.',
        'wallet',
        'globalAgent',
        'mainnet',
        '\x20ms.\x0a',
        'error',
        '\x0a\x20%\x20Order\x20denied',
        'getAsset',
        'address',
        'then',
        'length',
        'stop',
        '\x20Offer\x20succeed.',
        'async-mutex',
        'destroy',
        '\x20Offer\x20skipped.\x20Price\x20too\x20low.',
        'CancelOrder',
        'https://',
        'addListener',
        'Missing\x20MetaMask\x20mnemonic\x20or\x20private\x20keys.',
        'infura_key',
        'opensea_key',
        'MatchOrders',
        '\x20Acquiring\x20asset...',
        'user_agent',
        'replace',
        'Init\x20proxies...',
        'readline',
        '\x0a\x20\x20\x20OpenSea:\x20\x20',
        'skip_if_owner_is_buyer',
        '\x20Request\x20was\x20throttled.',
        '\x20Fetch\x20timeout.',
        'process_timeout',
        'list.txt',
        'gasPrice',
        'https://opensea.io/',
        '\x0a\x20*\x20',
        '\x20Offer\x20skipped.\x20Price\x20too\x20high.',
        'port',
        'Invalid\x20random\x20factor\x20-\x20too\x20big.',
        'wallet_address',
        'Init\x20OpenSea\x20SDK...',
        'log_opensea',
        '\x0a\x20\x20\x20Switch\x20proxy\x20',
        'rinkeby',
        'type',
        '16ZXRArf',
        'Network',
        'log_full',
        'options',
        'skip_if_have_bid',
        'stringify',
        'log_fetch',
        'Invalid\x20switch\x20delay.',
        'TransactionFailed',
        'API\x20Error\x20500',
        'bignumber.js',
        'log_fetch_all',
        'config',
        'clear_cache_threshold',
        'SAFE_EVENT_EMITTER_HANDLER',
        'Invalid\x20random\x20factor.',
        'random_factor',
        'Invalid\x20price\x20increment\x20factor.',
        'agent',
        'buyOrders',
        '3059416IbHRDu',
        'split',
        'yargs',
        'node_key',
        'gasPriceAddition',
        'cache_timeout',
        '\x20Internal\x20server\x20error.',
        'Using\x20Alchemy...',
        'switch_delay',
        '4062675ttWABX',
        'Content-Type',
        'headers',
        'stack',
        'ApproveCurrency',
        '\x0a\x20\x20\x20\x20\x20Price:\x20\x20\x20',
        'https',
        'Missing\x20wallet\x20address.',
        'utf-8',
        '50sSoHXX',
        'maker',
        'skip_if_order_created',
        'is_infura',
        'http://',
        'Mutex',
        '\x0a\x20%\x20Wrap\x20ETH',
        'http',
        'Error:\x20Proxy\x20not\x20supported\x20-\x20',
        'switch_threshold',
        'https://eth-',
        '\x20Internal\x20processing\x20error.\x20Set\x20log_full\x20option\x20to\x20see\x20more\x20info.',
        'privateKeys',
        '\x20Internal\x20processing\x20error.',
        'Init\x20event\x20handlers...',
        '\x0a\x20%\x20Transaction\x20created',
        'OrderDenied',
        '\x0a\x20%\x20Transaction\x20confirmed',
        '\x0a\x20\x20\x20',
        '\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20',
        'Using\x20network:\x20mainnet...',
        'user-agent',
        '364588XqQKEi',
        '\x20Offer\x20skipped.\x20Already\x20own\x20this\x20asset.',
        'aborted',
        'request_filter',
        '\x0a\x20%\x20Transaction\x20denied',
        'filter',
        'now',
        'Delay\x20per\x20line:\x20',
        'Invalid\x20fetch\x20timeput.',
        'mnemonic',
        '\x20\x20\x20Invalid\x20asset\x20on\x20line\x20',
        'TransactionDenied',
        '\x20Offer\x20discarded.\x20Too\x20many\x20errors.',
        'config.json',
        'proxy_list',
        'alchemy_key',
        'Invalid\x20price\x20epsilon.'
    ];
    _0x4c8d = function () {
        return _0x2b0a59;
    };
    return _0x4c8d();
}
async function _0x159232() {
    const _0x30e7a8 = _0x59ca8d;
    try {
        if (_0x4cbbab[_0x30e7a8(0x1f9)]) {
            _0x9f6796(_0x30e7a8(0x274));
            const _0x315129 = _0x11e28e(_0x4cbbab['proxy_list']);
            let _0x28cf85 = 0x0, _0x275f96 = _0x20a61c;
            for (const _0x386049 of _0x315129) {
                _0x386049 && _0x386049['length'] > 0x0 && (_0x168a11[_0x28cf85] = _0x386049, _0x28cf85 == _0x275f96 && (_0x20a61c--, await _0x24da09(), _0x9f6796('')), _0x28cf85++);
            }
        }
    } catch (_0x2c199a) {
        _0x12ed94(_0x2c199a);
    }
}
function _0x288719() {
    const _0x13e9ea = _0x59ca8d;
    try {
        _0x9f6796(_0x13e9ea(0x1aa));
        const _0x58f80b = require(_0x13e9ea(0x229)), _0x296ed6 = require(_0x13e9ea(0x20d));
        global[_0x13e9ea(0x1bd)] = _0x2cf5d8 => {
            _0x12ed94(_0x2cf5d8);
        };
        _0x4cbbab[_0x13e9ea(0x240)] === _0x13e9ea(0x25d) ? _0x9f6796(_0x13e9ea(0x1e9)) : _0x9f6796('Using\x20network:\x20rinkeby...');
        _0x4cbbab[_0x13e9ea(0x1d8)] ? _0x9f6796('Using\x20Infura...') : _0x9f6796(_0x13e9ea(0x1ca));
        let _0x2ac4e1 = { 'providerOrUrl': _0x4cbbab[_0x13e9ea(0x1d8)] ? _0x13e9ea(0x26b) + _0x4cbbab[_0x13e9ea(0x240)] + _0x13e9ea(0x244) + _0x4cbbab[_0x13e9ea(0x1c6)] : _0x13e9ea(0x1df) + _0x4cbbab[_0x13e9ea(0x240)] + _0x13e9ea(0x238) + _0x4cbbab[_0x13e9ea(0x1c6)] };
        if (_0x13e9ea(0x1f4) in _0x4cbbab)
            _0x2ac4e1[_0x13e9ea(0x1f4)] = { 'phrase': _0x4cbbab['mnemonic'] };
        else {
            if (_0x13e9ea(0x236) in _0x4cbbab && _0x4cbbab['private_keys'][_0x13e9ea(0x264)] >= 0x1)
                _0x2ac4e1[_0x13e9ea(0x1e1)] = _0x4cbbab[_0x13e9ea(0x236)];
            else
                return _0x9f6796(_0x13e9ea(0x217)), null;
        }
        _0x2ea6f4 = new _0x296ed6(_0x2ac4e1);
        if (_0xa749f9(_0x2ea6f4))
            return ![];
        _0x2ea6f4[_0x13e9ea(0x1ff)]['on'](_0x13e9ea(0x25f), _0x3129eb => _0x12ed94(_0x3129eb));
        _0x4cbbab[_0x13e9ea(0x26f)] && _0x9f6796('Using\x20provided\x20OpenSea\x20API\x20key...');
        let _0x1a7660 = {
            'networkName': _0x4cbbab[_0x13e9ea(0x240)] === _0x13e9ea(0x25d) ? _0x58f80b['Network']['Main'] : _0x58f80b[_0x13e9ea(0x1b0)][_0x13e9ea(0x214)],
            'apiKey': _0x4cbbab[_0x13e9ea(0x26f)]
        };
        return _0x4cbbab[_0x13e9ea(0x21d)] && (_0x1a7660[_0x13e9ea(0x1a3)] = _0x4cbbab[_0x13e9ea(0x21d)]), _0x55848b = new _0x58f80b['OpenSeaPort'](_0x2ea6f4, _0x1a7660, _0xb11b5c => _0x3cedd2(_0xb11b5c)), !_0xa749f9(_0x55848b);
    } catch (_0x2f7d00) {
        _0x12ed94(_0x2f7d00);
    }
    return ![];
}
function _0x2fa9f3() {
    return _0x4cbbab['delay'] * 0.08;
}
function _0x227633(_0x4b60bf) {
    const _0x116804 = _0x59ca8d;
    let _0x364f8c = { ..._0x4b60bf };
    return _0x364f8c[_0x116804(0x1c1)] = _0x977186[_0x116804(0x25c)], _0x4b60bf && 'headers' in _0x4b60bf ? _0x364f8c[_0x116804(0x1ce)] = _0x4b60bf['headers'] : _0x364f8c[_0x116804(0x1ce)] = {}, _0x4cbbab[_0x116804(0x272)] && (_0x364f8c[_0x116804(0x1ce)][_0x116804(0x1ea)] = _0x4cbbab[_0x116804(0x272)]), _0x4cbbab[_0x116804(0x241)] && (_0x364f8c['headers'][_0x116804(0x241)] = _0x4cbbab[_0x116804(0x241)]), _0x364f8c;
}
function _0x3870(_0x4437c3, _0x1548b2) {
    const _0x4c8d29 = _0x4c8d();
    return _0x3870 = function (_0x387087, _0x41ca71) {
        _0x387087 = _0x387087 - 0x19c;
        let _0x4fa927 = _0x4c8d29[_0x387087];
        return _0x4fa927;
    }, _0x3870(_0x4437c3, _0x1548b2);
}
function _0x2a1a94(_0x3c067d, _0x3fb5a1) {
    const _0x5c25d1 = _0x59ca8d;
    if (!_0x4cbbab[_0x5c25d1(0x1b5)])
        return;
    _0x9f6796('\x0a\x20\x20\x20Fetching\x0a\x20\x20\x20' + _0x3c067d);
    if (!_0x4cbbab[_0x5c25d1(0x1ba)])
        return;
    _0x5c25d1(0x1ce) in _0x3fb5a1 && _0x9f6796(_0x5c25d1(0x247) + JSON[_0x5c25d1(0x1b4)](_0x3fb5a1[_0x5c25d1(0x1ce)], null, '\x20\x20') + '\x0a'), _0x5c25d1(0x20b) in _0x3fb5a1 && (_0x5c25d1(0x1ce) in _0x3fb5a1 && _0x5c25d1(0x1cd) in _0x3fb5a1[_0x5c25d1(0x1ce)] && _0x3fb5a1[_0x5c25d1(0x1ce)]['Content-Type'] == 'application/json' ? _0x9f6796('\x0aBody\x20(JSON):\x20' + JSON[_0x5c25d1(0x1b4)](JSON[_0x5c25d1(0x23f)](_0x3fb5a1[_0x5c25d1(0x20b)]), null, '\x20\x20') + '\x0a') : _0x9f6796(_0x5c25d1(0x24f) + JSON[_0x5c25d1(0x1b4)](_0x3fb5a1[_0x5c25d1(0x20b)], null, '\x20\x20') + '\x0a'));
}
function _0x3484d5() {
    const _0x9f9299 = _0x59ca8d;
    _0xffdb4b[_0x9f9299(0x1b2)][_0x9f9299(0x23b)] = _0x4cbbab[_0x9f9299(0x23b)], _0xffdb4b[_0x9f9299(0x1b2)]['cache_timeout'] = _0x4cbbab[_0x9f9299(0x1c8)];
    const _0x58a391 = _0xffdb4b[_0x9f9299(0x1b2)]['request_filter'];
    _0xffdb4b[_0x9f9299(0x1b2)][_0x9f9299(0x1ee)] = (_0x3dc64a, _0x6cb49d) => {
        if (_0x3dc64a == _0x3756e7)
            return ![];
        if (_0x3dc64a == _0x387257)
            return ![];
        return _0x58a391(_0x3dc64a, _0x6cb49d);
    }, global[_0x9f9299(0x258)] = (_0x4e0a7c, _0x3cd3aa) => {
        let _0x101eed = _0x227633(_0x3cd3aa);
        return _0x2a1a94(_0x4e0a7c, _0x101eed), new Promise((_0xb2084b, _0x3cd7d7) => {
            const _0x39b45b = _0x3870;
            _0xffdb4b[_0x39b45b(0x258)](_0x4e0a7c, _0x101eed)[_0x39b45b(0x263)](_0x14ce4c => {
                const _0x4c2df6 = _0x39b45b;
                _0x46f6d7(_0x2fa9f3())[_0x4c2df6(0x263)](() => {
                    _0xb2084b(_0x14ce4c);
                });
            })[_0x39b45b(0x239)](_0x4e2152 => {
                const _0x44edd9 = _0x39b45b;
                _0x4e2152['type'] && _0x4e2152[_0x44edd9(0x1ae)] == _0x44edd9(0x1ed) ? _0x3cd7d7(new Error(_0x44edd9(0x243))) : _0x3cd7d7(_0x4e2152);
            });
        });
    };
}
async function _0x1ea7a3() {
    const _0x14c86f = _0x59ca8d;
    if (!_0x55848b) {
        _0x9f6796(_0x14c86f(0x232));
        return;
    }
    try {
        _0x9f6796(_0x14c86f(0x1e3));
        const {EventType: _0x431201} = require(_0x14c86f(0x229));
        _0x55848b[_0x14c86f(0x26c)](_0x431201['TransactionCreated'], () => {
            const _0x5dc6b7 = _0x14c86f;
            _0x9f6796(_0x5dc6b7(0x1e4));
        }), _0x55848b[_0x14c86f(0x26c)](_0x431201['TransactionConfirmed'], () => {
            const _0x28d46d = _0x14c86f;
            _0x9f6796(_0x28d46d(0x1e6));
        }), _0x55848b['addListener'](_0x431201[_0x14c86f(0x1f6)], () => {
            const _0x1030e9 = _0x14c86f;
            _0x9f6796(_0x1030e9(0x1ef));
        }), _0x55848b['addListener'](_0x431201[_0x14c86f(0x1b7)], () => {
            const _0x19dfe2 = _0x14c86f;
            _0x9f6796(_0x19dfe2(0x21b));
        }), _0x55848b[_0x14c86f(0x26c)](_0x431201[_0x14c86f(0x234)], () => {
            const _0x2fa859 = _0x14c86f;
            _0x9f6796(_0x2fa859(0x21e));
        }), _0x55848b[_0x14c86f(0x26c)](_0x431201[_0x14c86f(0x219)], () => {
            const _0x1a2135 = _0x14c86f;
            _0x9f6796(_0x1a2135(0x1db));
        }), _0x55848b[_0x14c86f(0x26c)](_0x431201['UnwrapWeth'], () => {
            _0x9f6796('\x0a\x20%\x20Unwrap\x20wETH');
        }), _0x55848b['addListener'](_0x431201[_0x14c86f(0x1d0)], () => {
            const _0x59a213 = _0x14c86f;
            _0x9f6796(_0x59a213(0x200));
        }), _0x55848b[_0x14c86f(0x26c)](_0x431201[_0x14c86f(0x251)], () => {
            _0x9f6796('\x0a\x20%\x20All\x20assets\x20approved');
        }), _0x55848b[_0x14c86f(0x26c)](_0x431201[_0x14c86f(0x207)], () => {
            _0x9f6796('\x0a\x20%\x20Asset\x20approved');
        }), _0x55848b['addListener'](_0x431201['CreateOrder'], () => {
            const _0x509866 = _0x14c86f;
            _0x9f6796(_0x509866(0x23a)), _0x38768b = !![];
        }), _0x55848b[_0x14c86f(0x26c)](_0x431201[_0x14c86f(0x1e5)], () => {
            const _0x124b3f = _0x14c86f;
            _0x9f6796(_0x124b3f(0x260));
        }), _0x55848b[_0x14c86f(0x26c)](_0x431201[_0x14c86f(0x270)], () => {
            _0x9f6796('\x0a\x20%\x20Orders\x20matched');
        }), _0x55848b[_0x14c86f(0x26c)](_0x431201[_0x14c86f(0x26a)], () => {
            const _0x5730d3 = _0x14c86f;
            _0x9f6796(_0x5730d3(0x206));
        });
    } catch (_0x31907c) {
        _0x12ed94(_0x31907c);
    }
}
function _0x10d0f8(_0x15a8cf, _0x507342) {
    const _0x54fa55 = _0x59ca8d, _0x299826 = _0x507342[_0x54fa55(0x273)](/\s\s*/g, '\x20')['replace'](/^\s*/g, '')['replace'](/\s*$/g, '')[_0x54fa55(0x1c4)]('\x20');
    if (!_0x299826 || _0x299826[_0x54fa55(0x264)] == 0x0)
        return [];
    if (_0x299826['length'] > 0x4)
        return _0x9f6796(_0x54fa55(0x1f5) + _0x15a8cf + ':\x20' + _0x507342), [];
    let _0x4703ef = _0x299826[0x0]['replace'](/^.*0x/, '0x');
    const _0x2ea6f9 = _0x4703ef[_0x54fa55(0x273)](/\/.*/, ''), _0x336074 = _0x4703ef['replace'](/.*\//, '');
    if (!_0x2ea6f9 && _0x2ea6f9[_0x54fa55(0x264)] == 0x0)
        return _0x9f6796(_0x54fa55(0x1f5) + _0x15a8cf + ':\x20' + _0x507342), [];
    if (!_0x336074 && _0x336074[_0x54fa55(0x264)] == 0x0)
        return _0x9f6796(_0x54fa55(0x1f5) + _0x15a8cf + ':\x20' + _0x507342), [];
    let _0x2d2db3 = [
        _0x4cbbab['price_floor'],
        _0x4cbbab[_0x54fa55(0x22d)],
        _0x4cbbab[_0x54fa55(0x23e)]
    ];
    if (_0x299826[_0x54fa55(0x264)] >= 0x2) {
        _0x2d2db3[0x0] = parseFloat(_0x299826[0x1][_0x54fa55(0x273)](',', '.'));
        if (isNaN(_0x2d2db3[0x0]))
            return _0x9f6796(_0x54fa55(0x1f5) + _0x15a8cf + ':\x20' + _0x507342), [];
    }
    if (_0x299826[_0x54fa55(0x264)] >= 0x3) {
        _0x2d2db3[0x1] = parseFloat(_0x299826[0x2][_0x54fa55(0x273)](',', '.'));
        if (isNaN(_0x2d2db3[0x1]))
            return _0x9f6796(_0x54fa55(0x1f5) + _0x15a8cf + ':\x20' + _0x507342), [];
    }
    if (_0x299826[_0x54fa55(0x264)] == 0x4) {
        _0x2d2db3[0x2] = parseFloat(_0x299826[0x3]['replace'](',', '.'));
        if (isNaN(_0x2d2db3[0x2]))
            return _0x9f6796(_0x54fa55(0x1f5) + _0x15a8cf + ':\x20' + _0x507342), [];
    }
    return [
        _0x2ea6f9,
        _0x336074,
        _0x2d2db3
    ];
}
function _0x2a0fde(_0x3dfd3d) {
    return _0x3dfd3d / 0xde0b6b3a7640000;
}
function _0x4552b4(_0xb37419, _0x10e237) {
    const _0x4da7ce = _0x59ca8d;
    let _0x24607c = _0xb37419 + _0x10e237, _0x3fb603 = _0xb37419 * (0x1 + _0x4cbbab[_0x4da7ce(0x231)]);
    if (_0x24607c < _0x3fb603)
        return _0x3fb603;
    return _0x24607c;
}
function _0x7dcf63(_0x512966, _0x4168ed) {
    const _0x301cf3 = _0x59ca8d;
    let _0x45fbbe = 0x0;
    if (_0x512966[_0x301cf3(0x1c2)] && _0x512966[_0x301cf3(0x1c2)][_0x301cf3(0x264)] > 0x0)
        for (const _0x23a783 of _0x512966['buyOrders']) {
            let _0x52a63f;
            _0x23a783['maker']['toLowerCase']() == _0x4cbbab[_0x301cf3(0x1a9)][_0x301cf3(0x255)]() ? _0x52a63f = _0x2a0fde(_0x23a783[_0x301cf3(0x211)]) : _0x52a63f = _0x4552b4(_0x2a0fde(_0x23a783[_0x301cf3(0x211)]), _0x4168ed), _0x45fbbe < _0x52a63f && (_0x45fbbe = _0x52a63f);
        }
    return _0x45fbbe;
}
function _0x510a3e() {
    const _0x3a861e = _0x59ca8d;
    return _0x4cbbab[_0x3a861e(0x235)] * (0x1 + Math['random']() * _0x4cbbab[_0x3a861e(0x1bf)]) + Math['random']() * _0x4cbbab[_0x3a861e(0x208)];
}
function _0x518289(_0xe77e48, _0x52af53, _0x55841b, _0x41ea85, _0x1726eb) {
    const _0x2f24c2 = _0x59ca8d, {AbortError: _0x3518d0} = require('abort-controller');
    _0x38768b && (_0x4cbbab['skip_if_order_created'] ? _0x9f6796(_0x2f24c2(0x1a5) + _0xe77e48 + _0x2f24c2(0x203) + (_0x2f24c2(0x20a) + _0x52af53) + (_0x2f24c2(0x237) + _0x55841b) + (_0x2f24c2(0x1d1) + _0x41ea85)) : _0x38768b = ![]);
    if (_0x1726eb == _0x2f24c2(0x243) || _0x1726eb[_0x2f24c2(0x1ae)] && _0x1726eb['type'] == _0x2f24c2(0x1ed))
        _0x9f6796(_0x2f24c2(0x1e7) + _0xe77e48 + _0x2f24c2(0x1a0));
    else {
        if (_0x1726eb[_0x2f24c2(0x227)] && _0x1726eb[_0x2f24c2(0x227)][_0x2f24c2(0x24d)]('API\x20Error\x20408'))
            _0x9f6796(_0x2f24c2(0x1e7) + _0xe77e48 + '\x20Request\x20timeout.');
        else {
            if (_0x1726eb[_0x2f24c2(0x227)] && _0x1726eb[_0x2f24c2(0x227)][_0x2f24c2(0x24d)]('API\x20Error\x20429'))
                _0x9f6796(_0x2f24c2(0x1e7) + _0xe77e48 + _0x2f24c2(0x19f));
            else {
                if (_0x1726eb['message'] && _0x1726eb[_0x2f24c2(0x227)]['includes'](_0x2f24c2(0x1b8)))
                    _0x9f6796(_0x2f24c2(0x1e7) + _0xe77e48 + _0x2f24c2(0x1c9));
                else
                    _0x1726eb[_0x2f24c2(0x227)] && _0x1726eb[_0x2f24c2(0x227)][_0x2f24c2(0x255)]()[_0x2f24c2(0x24d)](_0x2f24c2(0x225)) ? _0x9f6796(_0x2f24c2(0x1e7) + _0xe77e48 + _0x2f24c2(0x230)) : !_0x4cbbab[_0x2f24c2(0x1b1)] ? _0x9f6796(_0x2f24c2(0x1e7) + _0xe77e48 + _0x2f24c2(0x1e0)) : _0x9f6796(_0x2f24c2(0x1e7) + _0xe77e48 + _0x2f24c2(0x1e2));
            }
        }
    }
    _0x4cbbab[_0x2f24c2(0x1b1)] && _0x12ed94(_0x1726eb);
}
async function _0x38165c(_0x46bf19, _0xb1ce51, _0x14b0db, _0x416aab) {
    const _0x55a39d = _0x59ca8d;
    if (!_0x55848b)
        return _0x9f6796(_0x55a39d(0x232)), !![];
    let _0x271ae0 = _0x416aab[0x0];
    _0x38768b = ![];
    try {
        _0x9f6796(_0x55a39d(0x1e7) + _0x46bf19 + _0x55a39d(0x271) + (_0x55a39d(0x20a) + _0xb1ce51) + (_0x55a39d(0x237) + _0x14b0db));
        let _0x560e7a = await _0x55848b[_0x55a39d(0x221)][_0x55a39d(0x261)]({
            'tokenAddress': _0xb1ce51,
            'tokenId': _0x14b0db
        });
        if (_0x4cbbab[_0x55a39d(0x19e)]) {
            if (_0x560e7a['owner'][_0x55a39d(0x262)][_0x55a39d(0x255)]() == _0x4cbbab[_0x55a39d(0x1a9)][_0x55a39d(0x255)]())
                return _0x9f6796(_0x55a39d(0x1a5) + _0x46bf19 + _0x55a39d(0x1ec)), !![];
        }
        const _0x2654c5 = _0x416aab[0x0], _0x2ff920 = _0x416aab[0x1], _0x1f156b = _0x416aab[0x2];
        if (_0x4cbbab[_0x55a39d(0x246)]) {
            _0x271ae0 = _0x7dcf63(_0x560e7a, _0x1f156b);
            if (_0x271ae0 < _0x2654c5) {
                if (_0x4cbbab[_0x55a39d(0x215)])
                    return _0x9f6796(_0x55a39d(0x1a5) + _0x46bf19 + _0x55a39d(0x269)), !![];
                _0x271ae0 = _0x2654c5;
            }
            if (_0x271ae0 > _0x2ff920) {
                if (_0x4cbbab['skip_if_too_high'])
                    return _0x9f6796(_0x55a39d(0x1a5) + _0x46bf19 + _0x55a39d(0x1a6)), !![];
                _0x271ae0 = _0x2ff920;
            }
        }
        if (_0x4cbbab[_0x55a39d(0x1b3)])
            for (const _0x53fb87 of _0x560e7a['buyOrders']) {
                if (_0x53fb87[_0x55a39d(0x1d6)][_0x55a39d(0x255)]() == _0x4cbbab[_0x55a39d(0x1a9)][_0x55a39d(0x255)]() && _0x2a0fde(_0x53fb87[_0x55a39d(0x211)]) + _0x1f156b >= _0x271ae0)
                    return _0x9f6796(_0x55a39d(0x1a5) + _0x46bf19 + _0x55a39d(0x24a)), !![];
            }
        _0x9f6796(_0x55a39d(0x1e7) + _0x46bf19 + _0x55a39d(0x245) + (_0x55a39d(0x20a) + _0xb1ce51) + (_0x55a39d(0x237) + _0x14b0db) + (_0x55a39d(0x1d1) + _0x271ae0));
        let _0xd9994e = 0x0;
        return _0x4cbbab['expiration'] > 0x0 && (_0xd9994e = Math['round'](Date[_0x55a39d(0x1f1)]() / 0x3e8 + 0x3c * 0x3c * _0x4cbbab[_0x55a39d(0x22c)])), await _0x2caaaa(_0x4cbbab['process_timeout'], () => {
            const _0x188d31 = _0x55a39d;
            return _0x55848b['createBuyOrder']({
                'asset': {
                    'tokenId': _0x14b0db,
                    'tokenAddress': _0xb1ce51
                },
                'accountAddress': _0x4cbbab[_0x188d31(0x1a9)],
                'expirationTime': _0xd9994e,
                'startAmount': _0x271ae0
            });
        }), _0x9f6796(_0x55a39d(0x1a5) + _0x46bf19 + _0x55a39d(0x266) + (_0x55a39d(0x20a) + _0xb1ce51) + (_0x55a39d(0x237) + _0x14b0db) + (_0x55a39d(0x1d1) + _0x271ae0)), _0x38768b;
    } catch (_0x17eca3) {
        _0x518289(_0x46bf19, _0xb1ce51, _0x14b0db, _0x271ae0, _0x17eca3);
    }
    return _0x38768b;
}
async function _0x5b4f19() {
    _0x13b116(_0x411c2e) && await _0x1efb39();
}
async function _0x527ad0(_0x1e9b6d, _0x4b3892) {
    const _0x19a8fb = _0x59ca8d;
    if (!_0x4b3892 || _0x4b3892['length'] == 0x0)
        return;
    const _0xd6ce3e = _0x10d0f8(_0x1e9b6d, _0x4b3892);
    if (!_0xd6ce3e || _0xd6ce3e[_0x19a8fb(0x264)] != 0x3)
        return;
    const [_0x396df2, _0x155f69, _0x325b98] = _0xd6ce3e;
    let _0x5002a3 = ![], _0x56bd7c = 0x0, _0x5b73fe = 0x0;
    while (!_0x5002a3) {
        await _0x5b4f19(), _0x5002a3 = await _0x38165c(_0x1e9b6d, _0x396df2, _0x155f69, _0x325b98), !_0x5002a3 && (_0x56bd7c++, _0x5b73fe++, _0x3286f9++, _0x3286f9 >= _0x4cbbab[_0x19a8fb(0x1de)] && (await _0x24da09(), _0x3286f9 = 0x0), _0x5b73fe >= _0x4cbbab[_0x19a8fb(0x1bc)] && (_0xffdb4b[_0x19a8fb(0x259)](), _0x5b73fe = 0x0), _0x56bd7c >= _0x4cbbab['discard_threshold'] && (_0x9f6796(_0x19a8fb(0x20e) + _0x1e9b6d + _0x19a8fb(0x1f7) + (_0x19a8fb(0x20a) + _0x396df2) + (_0x19a8fb(0x237) + _0x155f69)), _0x5002a3 = !![]));
    }
}
async function _0x4e3ca0(_0x160e22) {
    const _0xf62b66 = _0x59ca8d;
    let _0x73ed05 = Date['now'](), _0x232175 = _0x42a465;
    _0x42a465 = 0x0;
    for (const _0x4e336b of _0x160e22) {
        if (_0x42a465 >= _0x232175 && _0x4e336b[_0xf62b66(0x264)] > 0x0) {
            await _0x527ad0(_0x42a465 + 0x1, _0x4e336b);
            let _0x3f3ae9 = Date[_0xf62b66(0x1f1)](), _0x3c6303 = _0x3f3ae9 - _0x73ed05;
            _0x3c6303 > 0x0 && await _0x46f6d7(_0x510a3e() - _0x3c6303), _0x73ed05 = _0x3f3ae9;
        }
        _0x42a465++;
    }
}
async function _0x1efb39() {
    const _0x3ad711 = _0x59ca8d;
    !_0xa749f9(_0x2ea6f4) && _0x2ea6f4[_0x3ad711(0x1ff)][_0x3ad711(0x265)]();
    _0x9f6796(_0x3ad711(0x1fc));
    const {unlink: _0x47180a} = require('fs');
    return _0x47180a(_0x411c2e, _0x3f8421 => {
    });
}
function _0x13b116(_0x51c7a7) {
    try {
        _0x427944(_0x51c7a7);
    } catch (_0x2b5a24) {
        return ![];
    }
    return !![];
}
async function _0x970c55(_0x4ef43e) {
    const _0x24a937 = _0x59ca8d, {BigNumber: _0x4ad36c} = require(_0x24a937(0x1b9));
    try {
        _0x9f6796(_0x24a937(0x228)), _0x55848b[_0x24a937(0x1c7)] = new _0x4ad36c(_0x4cbbab[_0x24a937(0x209)]);
        _0x4cbbab['price_auto'] && _0x9f6796('Auto\x20price\x20enabled.');
        let _0x18ad29 = _0x4cbbab[_0x24a937(0x235)], _0x12d87e = _0x4cbbab['delay'] * (0x1 + _0x4cbbab[_0x24a937(0x1bf)]) + _0x4cbbab[_0x24a937(0x208)];
        _0x12d87e > _0x18ad29 ? _0x9f6796(_0x24a937(0x1f2) + _0x18ad29 + '--' + _0x12d87e + _0x24a937(0x25e)) : _0x9f6796(_0x24a937(0x1f2) + _0x18ad29 + _0x24a937(0x25e)), _0x42a465 > 0x0 && _0x9f6796('Resuming\x20progress\x20from\x20line\x20' + _0x42a465 + '...\x0a'), await _0x4e3ca0(_0x11e28e(_0x4ef43e));
    } catch (_0x337998) {
        _0x12ed94(_0x337998);
    }
    await _0x1efb39();
}
async function _0x1bf47d() {
    if (_0x547f5a) {
        _0x1f16d0(_0x411c2e, ''), await _0x1efb39();
        return;
    }
    _0x4cbbab = _0x29fcea();
    if (!_0x4782e5(_0x4cbbab)) {
        await _0x1efb39();
        return;
    }
    _0x3484d5();
    if (!_0x288719())
        return;
    await _0x159232(), await _0x1ea7a3(), await _0x970c55(_0x175f1f);
}
_0x1bf47d();
