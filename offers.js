'use strict';
const _0xc4bc7b = _0x5d4d;
(function (_0x420551, _0x47fcaf) {
    const _0x5e77ab = _0x5d4d, _0x3bba16 = _0x420551();
    while (!![]) {
        try {
            const _0x3b9c31 = parseInt(_0x5e77ab(0x20c)) / 0x1 + parseInt(_0x5e77ab(0x2b0)) / 0x2 + -parseInt(_0x5e77ab(0x223)) / 0x3 + parseInt(_0x5e77ab(0x20e)) / 0x4 * (parseInt(_0x5e77ab(0x221)) / 0x5) + parseInt(_0x5e77ab(0x224)) / 0x6 + parseInt(_0x5e77ab(0x243)) / 0x7 * (-parseInt(_0x5e77ab(0x2a8)) / 0x8) + -parseInt(_0x5e77ab(0x1f5)) / 0x9;
            if (_0x3b9c31 === _0x47fcaf)
                break;
            else
                _0x3bba16['push'](_0x3bba16['shift']());
        } catch (_0x23dd72) {
            _0x3bba16['push'](_0x3bba16['shift']());
        }
    }
}(_0x5d3b, 0x60a4b));
const {
        appendFileSync: _0x28164b,
        writeFileSync: _0x1a66bf,
        readFileSync: _0x2feb9e
    } = require('fs'), {createInterface: _0x451a5c} = require(_0xc4bc7b(0x2ab)), {isNullOrUndefined: _0x259ca5} = require(_0xc4bc7b(0x242)), _0x51ec1f = require(_0xc4bc7b(0x225)), _0x38a66d = require(_0xc4bc7b(0x261)), _0x5a296f = require(_0xc4bc7b(0x247)), _0x155dad = require(_0xc4bc7b(0x250)), _0x47fffd = !!_0x51ec1f[_0xc4bc7b(0x1ff)][_0xc4bc7b(0x2a2)], _0x429fa0 = _0x51ec1f['argv']['resume'] || 0x0, _0x3ebf19 = _0x51ec1f['argv']['file'] || _0xc4bc7b(0x236), _0x52f7ae = _0x51ec1f[_0xc4bc7b(0x1ff)]['config'] || _0xc4bc7b(0x297), _0x576979 = _0x51ec1f[_0xc4bc7b(0x1ff)]['output'] || _0xc4bc7b(0x251), _0x3105f5 = _0x51ec1f['argv'][_0xc4bc7b(0x27f)], _0x404477 = _0x51ec1f[_0xc4bc7b(0x1ff)][_0xc4bc7b(0x2a9)], _0x216aba = _0x51ec1f[_0xc4bc7b(0x1ff)][_0xc4bc7b(0x254)], _0x2ada63 = !!_0x51ec1f[_0xc4bc7b(0x1ff)][_0xc4bc7b(0x296)], _0x87d35c = !!_0x51ec1f[_0xc4bc7b(0x1ff)]['log_opensea'], _0x1975e8 = !!_0x51ec1f[_0xc4bc7b(0x1ff)]['log_fetch'], _0x52bc18 = !!_0x51ec1f[_0xc4bc7b(0x1ff)][_0xc4bc7b(0x280)], _0x365aa = !!_0x51ec1f['argv'][_0xc4bc7b(0x264)], _0x269e77 = _0xc4bc7b(0x269), _0x1fc2d8 = _0xc4bc7b(0x248);
function _0x5d4d(_0x58ca2e, _0x251008) {
    const _0x5d3b4d = _0x5d3b();
    return _0x5d4d = function (_0x5d4d0b, _0x14d411) {
        _0x5d4d0b = _0x5d4d0b - 0x1e2;
        let _0x5d6bc0 = _0x5d3b4d[_0x5d4d0b];
        return _0x5d6bc0;
    }, _0x5d4d(_0x58ca2e, _0x251008);
}
var _0x1e8b69, _0x559bae, _0x54a2d8, _0x567776 = 0x0, _0x55b4b7 = _0x429fa0, _0x3a0bcd = ![], _0x538c63 = [], _0xe7c326 = 0x0;
function _0x1040f2(_0x1cf4c3) {
    _0x2ada63 && console['log'](_0x1cf4c3), _0x28164b(_0x576979, _0x1cf4c3 + '\x0a');
}
function _0x5a959f(_0x455e4b) {
    const _0xc2094 = _0xc4bc7b, _0xeee87c = '\x0a' + (_0x455e4b[_0xc2094(0x288)] ? _0x455e4b[_0xc2094(0x288)] : _0x455e4b['message'] ? _0xc2094(0x222) + _0x455e4b[_0xc2094(0x294)] : '' + _0x455e4b);
    _0x2ada63 && console[_0xc2094(0x21b)](_0xeee87c), _0x28164b(_0x576979, _0xeee87c + '\x0a');
}
function _0x47f185(_0x35ddb6) {
    const _0x33dc08 = _0xc4bc7b;
    return _0x35ddb6 === _0x33dc08(0x270) || _0x35ddb6 === _0x33dc08(0x282) ? _0x33dc08(0x270) : _0x33dc08(0x1f9);
}
function _0x2a23cf() {
    const _0x2c5ae5 = _0xc4bc7b;
    try {
        _0x1040f2('\x0aInit\x20config...');
        var _0x122f1d = JSON[_0x2c5ae5(0x24a)](_0x2feb9e(_0x52f7ae));
        return _0x122f1d[_0x2c5ae5(0x22c)] = 'infura_key' in _0x122f1d, _0x122f1d['node_key'] = _0x122f1d[_0x2c5ae5(0x2a7)] || _0x122f1d[_0x2c5ae5(0x235)], !!_0x122f1d[_0x2c5ae5(0x211)] && (_0x122f1d['network'] = _0x47f185(_0x122f1d['network'])), !('delay' in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x1e8)] = 0x1388), !(_0x2c5ae5(0x201) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x201)] = 0.5), !(_0x2c5ae5(0x21e) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x21e)] = 0x0), !(_0x2c5ae5(0x2af) in _0x122f1d) && (_0x122f1d['expiration'] = 0x18), !(_0x2c5ae5(0x29f) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x29f)] = !![]), !(_0x2c5ae5(0x2a1) in _0x122f1d) && (_0x122f1d['skip_if_too_low'] = ![]), !(_0x2c5ae5(0x289) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x289)] = !![]), !(_0x2c5ae5(0x20b) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x20b)] = !![]), !(_0x2c5ae5(0x260) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x260)] = ![]), !(_0x2c5ae5(0x239) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x239)] = 0xa), !(_0x2c5ae5(0x233) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x233)] = 0xa), !(_0x2c5ae5(0x1e6) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x1e6)] = 0x3), !(_0x2c5ae5(0x29c) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x29c)] = !![]), !(_0x2c5ae5(0x26b) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x26b)] = 0.0001), !(_0x2c5ae5(0x29b) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x29b)] = 0.0001), !(_0x2c5ae5(0x257) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x257)] = 0x1), !(_0x2c5ae5(0x26e) in _0x122f1d) && (_0x122f1d['price_increment_factor'] = 0.1), !(_0x2c5ae5(0x26f) in _0x122f1d) && (_0x122f1d['proxy_protocol'] = 'http://'), !(_0x2c5ae5(0x208) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x208)] = !![]), !('switch_delay' in _0x122f1d) && (_0x122f1d['switch_delay'] = 0x7d0), !(_0x2c5ae5(0x23b) in _0x122f1d) && (_0x122f1d['log_opensea'] = ![]), !(_0x2c5ae5(0x286) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x286)] = ![]), !('log_fetch_all' in _0x122f1d) && (_0x122f1d['log_fetch_all'] = ![]), !(_0x2c5ae5(0x264) in _0x122f1d) && (_0x122f1d['log_full'] = ![]), !(_0x2c5ae5(0x219) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x219)] = 0x5), !(_0x2c5ae5(0x2ae) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x2ae)] = 0x2710), !(_0x2c5ae5(0x2ac) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x2ac)] = 0xea60), !(_0x2c5ae5(0x274) in _0x122f1d) && (_0x122f1d[_0x2c5ae5(0x274)] = 0x2710), _0x2c5ae5(0x23b) in _0x51ec1f[_0x2c5ae5(0x1ff)] && (_0x122f1d['log_opensea'] = _0x87d35c), _0x2c5ae5(0x286) in _0x51ec1f[_0x2c5ae5(0x1ff)] && (_0x122f1d['log_fetch'] = _0x1975e8), 'log_fetch_all' in _0x51ec1f[_0x2c5ae5(0x1ff)] && (_0x122f1d[_0x2c5ae5(0x280)] = _0x52bc18), _0x2c5ae5(0x264) in _0x51ec1f[_0x2c5ae5(0x1ff)] && (_0x122f1d[_0x2c5ae5(0x264)] = _0x365aa), _0x3105f5 && (_0x122f1d[_0x2c5ae5(0x27f)] = _0x3105f5), _0x404477 && (_0x122f1d[_0x2c5ae5(0x22d)] = _0x404477), _0x216aba && (_0x122f1d[_0x2c5ae5(0x206)] = _0x216aba), _0x122f1d;
    } catch (_0x5cb931) {
        _0x5a959f(_0x5cb931);
    }
    return {};
}
function _0x45bc5c(_0x409f4f) {
    const _0x26da3c = _0xc4bc7b;
    let _0x364334 = !![];
    return !(_0x26da3c(0x211) in _0x409f4f) && (_0x1040f2(_0x26da3c(0x284)), _0x364334 = ![]), !(_0x26da3c(0x24d) in _0x409f4f) && !('private_keys' in _0x409f4f) && (_0x1040f2(_0x26da3c(0x1e3)), _0x364334 = ![]), !(_0x26da3c(0x24d) in _0x409f4f) && _0x26da3c(0x25d) in _0x409f4f && _0x409f4f[_0x26da3c(0x25d)]['length'] <= 0x0 && (_0x1040f2(_0x26da3c(0x234)), _0x364334 = ![]), !(_0x26da3c(0x1e9) in _0x409f4f) && (_0x1040f2('Missing\x20blockchain\x20node\x20API\x20key.'), _0x364334 = ![]), !(_0x26da3c(0x22d) in _0x409f4f) && (_0x1040f2(_0x26da3c(0x209)), _0x364334 = ![]), _0x409f4f[_0x26da3c(0x1e8)] < 0x0 && (_0x1040f2(_0x26da3c(0x259)), _0x364334 = ![]), _0x409f4f['random_factor'] < 0x0 && (_0x1040f2('Invalid\x20random\x20factor.'), _0x364334 = ![]), _0x409f4f[_0x26da3c(0x201)] > 0x3 && (_0x1040f2('Invalid\x20random\x20factor\x20-\x20too\x20big.'), _0x364334 = ![]), _0x409f4f[_0x26da3c(0x21e)] < 0x0 && (_0x1040f2(_0x26da3c(0x230)), _0x364334 = ![]), _0x409f4f[_0x26da3c(0x20d)] < 0x0 && (_0x1040f2(_0x26da3c(0x215)), _0x364334 = ![]), _0x409f4f[_0x26da3c(0x2ae)] < 0x0 && (_0x1040f2(_0x26da3c(0x267)), _0x364334 = ![]), _0x409f4f[_0x26da3c(0x2ac)] < 0x0 && (_0x1040f2('Invalid\x20cache\x20timeput.'), _0x364334 = ![]), _0x409f4f[_0x26da3c(0x274)] < 0x0 && (_0x1040f2(_0x26da3c(0x23c)), _0x364334 = ![]), _0x409f4f[_0x26da3c(0x219)] < 0x0 && (_0x1040f2('Invalid\x20clear\x20cache\x20threshold.'), _0x364334 = ![]), _0x409f4f['gas_price_addition'] < 0x0 && (_0x1040f2(_0x26da3c(0x1fd)), _0x364334 = ![]), _0x409f4f[_0x26da3c(0x29b)] < 0x0 && _0x1040f2(_0x26da3c(0x1f7)), (_0x409f4f[_0x26da3c(0x257)] < 0x0 || _0x409f4f[_0x26da3c(0x257)] < _0x409f4f[_0x26da3c(0x29b)]) && _0x1040f2('Warning!\x20Invalid\x20price\x20roof.'), _0x409f4f[_0x26da3c(0x26b)] < 0x0 && (_0x1040f2('Invalid\x20price\x20epsilon.'), _0x364334 = ![]), (_0x409f4f[_0x26da3c(0x26e)] < 0x0 || _0x409f4f[_0x26da3c(0x26e)] > 0x1) && (_0x1040f2(_0x26da3c(0x283)), _0x364334 = ![]), _0x409f4f['expiration'] < 0x0 && (_0x1040f2(_0x26da3c(0x204)), _0x364334 = ![]), _0x364334;
}
function _0x5e34dc(_0x4556e4) {
    const _0x5a33f0 = _0xc4bc7b;
    _0x1e8b69[_0x5a33f0(0x23b)] && _0x1040f2(_0x5a33f0(0x281) + ('' + _0x4556e4)['replace']('\x0a', _0x5a33f0(0x2a0)));
}
function _0x351f59(_0xdf8cd3) {
    const _0xe81342 = _0xc4bc7b;
    try {
        let _0x22324d = _0x1e8b69[_0xe81342(0x26f)], _0x495aa8 = _0xdf8cd3[_0xe81342(0x285)]('\x20', '');
        _0x495aa8[_0xe81342(0x226)]('//') && (_0x22324d = _0x495aa8[_0xe81342(0x285)](/\/\/.*$/g, '//'), _0x495aa8 = _0x495aa8[_0xe81342(0x285)](/^.*\/\//g, ''));
        if (_0x495aa8[_0xe81342(0x226)]('@') && (_0x495aa8[_0xe81342(0x2aa)](/\:/g) || [])[_0xe81342(0x229)] == 0x2) {
            const _0x3b179a = _0x495aa8['replace'](/.*@/, ''), _0x376848 = _0x495aa8[_0xe81342(0x285)]('@' + _0x3b179a, '');
            if (!_0x376848 || _0x376848[_0xe81342(0x229)] == 0x0)
                return _0x1040f2(_0xe81342(0x1e4) + _0xdf8cd3 + '.'), {};
            if (!_0x3b179a || _0x3b179a['length'] == 0x0)
                return _0x1040f2(_0xe81342(0x1e4) + _0xdf8cd3 + '.'), {};
            const _0x5f5bc5 = _0x376848[_0xe81342(0x246)](':'), _0x240d8e = _0x3b179a[_0xe81342(0x246)](':');
            if (_0x5f5bc5[_0xe81342(0x229)] != 0x2)
                return _0x1040f2(_0xe81342(0x1e4) + _0xdf8cd3 + '.'), {};
            if (_0x240d8e[_0xe81342(0x229)] != 0x2)
                return _0x1040f2('Error:\x20Invalid\x20proxy\x20syntax\x20-\x20' + _0xdf8cd3 + '.'), {};
            return {
                'protocol': _0x22324d,
                'user': _0x5f5bc5[0x0],
                'pass': _0x5f5bc5[0x1],
                'host': _0x240d8e[0x0],
                'port': parseInt(_0x240d8e[0x1])
            };
        }
        const _0x1e247b = _0x495aa8['split'](':');
        if (_0x1e247b['length'] == 0x2)
            return {
                'protocol': _0x22324d,
                'host': _0x1e247b[0x0],
                'port': parseInt(_0x1e247b[0x1])
            };
        if (_0x1e247b['length'] == 0x4)
            return {
                'protocol': _0x22324d,
                'user': _0x1e247b[0x2],
                'pass': _0x1e247b[0x3],
                'host': _0x1e247b[0x0],
                'port': parseInt(_0x1e247b[0x1])
            };
    } catch (_0x2ba888) {
        _0x5a959f(_0x2ba888);
    }
    return _0x1040f2(_0xe81342(0x1e4) + _0xdf8cd3 + '.'), {};
}
function _0x3aabc7() {
    const _0x3ad73a = _0xc4bc7b;
    if (_0x38a66d[_0x3ad73a(0x253)])
        _0x38a66d['globalAgent']['destroy']();
    if (_0x5a296f['globalAgent'])
        _0x5a296f[_0x3ad73a(0x253)][_0x3ad73a(0x292)]();
}
function _0x1c2473(_0x400830, _0x15eabf) {
    const _0x2fe31f = _0xc4bc7b;
    _0x3aabc7(), _0x38a66d[_0x2fe31f(0x253)] = _0x400830, _0x5a296f[_0x2fe31f(0x253)] = _0x15eabf;
}
function _0x3f179d(_0x57827b) {
    const _0xf0164f = _0xc4bc7b;
    _0x3aabc7(), _0x38a66d[_0xf0164f(0x253)] = _0x57827b, _0x5a296f['globalAgent'] = _0x57827b;
}
function _0x5b78ff() {
    const _0xd071b4 = _0xc4bc7b;
    _0x3aabc7(), _0x38a66d['globalAgent'] = new _0x38a66d['Agent'](), _0x5a296f[_0xd071b4(0x253)] = new _0x5a296f['Agent']();
}
function _0x5f3aa0(_0x46e5d4, _0x32a5e6) {
    const _0x5ed1cf = _0xc4bc7b;
    try {
        const _0x4d36b7 = _0x351f59(_0x32a5e6);
        if (_0x4d36b7 && _0x4d36b7 !== {}) {
            let _0x347816;
            _0x4d36b7['user'] && _0x4d36b7[_0x5ed1cf(0x291)]['length'] > 0x0 ? _0x347816 = '' + _0x4d36b7[_0x5ed1cf(0x203)] + _0x4d36b7['user'] + ':' + _0x4d36b7[_0x5ed1cf(0x266)] + '@' + _0x4d36b7['host'] + ':' + _0x4d36b7[_0x5ed1cf(0x1f4)] : _0x347816 = '' + _0x4d36b7[_0x5ed1cf(0x203)] + _0x4d36b7[_0x5ed1cf(0x200)] + ':' + _0x4d36b7[_0x5ed1cf(0x1f4)];
            if (_0x4d36b7[_0x5ed1cf(0x203)][_0x5ed1cf(0x226)](_0x5ed1cf(0x261))) {
                _0x1c2473(new require(_0x5ed1cf(0x27d))(_0x347816), new require(_0x5ed1cf(0x295))(_0x347816)), _0x1040f2(_0x5ed1cf(0x252) + _0x46e5d4 + '\x20-\x20' + _0x4d36b7[_0x5ed1cf(0x203)] + _0x4d36b7[_0x5ed1cf(0x200)] + ':' + _0x4d36b7[_0x5ed1cf(0x1f4)]);
                return;
            }
            if (_0x4d36b7[_0x5ed1cf(0x203)][_0x5ed1cf(0x226)](_0x5ed1cf(0x220))) {
                _0x3f179d(new require(_0x5ed1cf(0x1e5))(_0x347816)), _0x1040f2(_0x5ed1cf(0x252) + _0x46e5d4 + _0x5ed1cf(0x279) + _0x4d36b7[_0x5ed1cf(0x203)] + _0x4d36b7[_0x5ed1cf(0x200)] + ':' + _0x4d36b7[_0x5ed1cf(0x1f4)]);
                return;
            }
            _0x1040f2(_0x5ed1cf(0x21a) + _0x32a5e6 + '.');
        }
        _0x5b78ff();
    } catch (_0x275e14) {
        _0x5a959f(_0x275e14);
    }
}
function _0x54bbaa() {
    const _0x47fcd8 = _0xc4bc7b;
    _0x538c63 && _0x538c63[_0x47fcd8(0x229)] > 0x0 && (_0xe7c326 = (_0xe7c326 + 0x1) % _0x538c63[_0x47fcd8(0x229)], _0x5f3aa0(_0xe7c326 + 0x1, _0x538c63[_0xe7c326]));
}
async function _0xb7dd8d(_0x29c28a) {
    const _0x271103 = _0xc4bc7b;
    if (_0x29c28a <= 0x0)
        return;
    const _0x20e71d = require('async-mutex')[_0x271103(0x232)], _0x15f91c = new _0x20e71d();
    let _0x13b3cb = await _0x15f91c[_0x271103(0x25c)]();
    setTimeout(() => {
        _0x13b3cb();
    }, _0x29c28a), _0x13b3cb = await _0x15f91c[_0x271103(0x25c)](), _0x13b3cb();
}
function _0x55f287(_0x522f84, _0x15170b) {
    return new Promise((_0x314140, _0x59ab7a) => {
        const _0x3becf9 = _0x5d4d;
        _0x522f84 < 0x0 && _0x59ab7a(_0x3becf9(0x21c));
        const _0x1e9eb5 = setTimeout(() => {
            const _0x453fe5 = _0x3becf9;
            _0x59ab7a(_0x453fe5(0x21c));
        }, _0x522f84);
        _0x15170b()[_0x3becf9(0x2a3)](_0x186e7d => {
            clearTimeout(_0x1e9eb5), _0x314140(_0x186e7d);
        })['catch'](_0x2855af => {
            clearTimeout(_0x1e9eb5), _0x59ab7a(_0x2855af);
        });
    });
}
async function _0x1530ac() {
    const _0x3f9037 = _0xc4bc7b;
    let _0x909ede;
    try {
        _0x909ede = await global[_0x3f9037(0x28e)](_0x3f9037(0x249));
    } catch (_0x376204) {
        try {
            _0x909ede = await global[_0x3f9037(0x28e)](_0x3f9037(0x249));
        } catch (_0x2ae1fd) {
            return _0x5a959f(_0x2ae1fd), '';
        }
    }
    try {
        let _0x241801 = await _0x909ede['text']();
        return _0x241801;
    } catch (_0x3ecbfb) {
        _0x5a959f(_0x3ecbfb);
    }
    return '';
}
async function _0x12dd03() {
    const _0x3ae4dc = _0xc4bc7b;
    if (!_0x538c63 || _0x538c63['length'] == 0x0)
        return;
    let _0x411e6a = ![];
    try {
        while (!_0x411e6a) {
            _0x411e6a = !![], _0x54bbaa();
            if (_0x1e8b69['proxy_checking'] && global[_0x3ae4dc(0x28e)])
                try {
                    await global['fetch'](_0x1fc2d8);
                } catch (_0x1ec02a) {
                    try {
                        await global['fetch'](_0x1fc2d8);
                    } catch (_0x45b6a6) {
                        _0x5a959f(_0x45b6a6), _0x411e6a = ![];
                    }
                }
            !_0x411e6a && await _0xb7dd8d(_0x1e8b69[_0x3ae4dc(0x20d)]);
        }
        let _0x325d80 = await _0x1530ac();
        _0x1040f2(_0x3ae4dc(0x256) + _0x325d80);
    } catch (_0x3d9992) {
        _0x5a959f(_0x3d9992);
    }
}
function _0x1cd5f0(_0x1bb0d0) {
    const _0x199d5d = _0xc4bc7b;
    return _0x2feb9e(_0x1bb0d0, _0x199d5d(0x231))[_0x199d5d(0x246)]('\x0a')[_0x199d5d(0x25b)](Boolean);
}
function _0x5d3b() {
    const _0x1687cf = [
        '93606YlFvsl',
        'switch_delay',
        '3156EnPxWl',
        '\x0a\x20%\x20Currency\x20approved',
        'Rinkeby',
        'network',
        'OpenSeaPort',
        'Init\x20event\x20handlers...',
        'user_agent',
        'Invalid\x20switch\x20delay.',
        'headers',
        'Main',
        '\x0a\x20%\x20Transaction\x20confirmed',
        'clear_cache_threshold',
        'Error:\x20Proxy\x20not\x20supported\x20-\x20',
        'error',
        'Timeout\x20error.',
        'Network',
        'random_delay',
        '\x0aHeaders:\x20',
        'socks',
        '2770loTclH',
        'Error:\x20',
        '344463fjpGyL',
        '1970262ykfmJN',
        'yargs',
        'includes',
        'toLowerCase',
        '\x0a\x20%\x20Unwrap\x20wETH',
        'length',
        'buyOrders',
        'owner',
        'is_infura',
        'wallet_address',
        'address',
        'currentPrice',
        'Invalid\x20random\x20delay.',
        'utf-8',
        'Mutex',
        'discard_threshold',
        'Private\x20keys\x20array\x20is\x20empty.',
        'alchemy_key',
        'list.txt',
        'ApproveAsset',
        'Using\x20network:\x20mainnet...',
        'switch_threshold',
        'addListener',
        'log_opensea',
        'Invalid\x20process\x20timeout.',
        'https://eth-',
        'Delay\x20per\x20line:\x20',
        '\x20ms.\x0a',
        '\x0a\x20%\x20Order\x20created',
        'random',
        'util',
        '7kbCYZM',
        'getAsset',
        'aborted',
        'split',
        'https',
        'https://opensea.io/',
        'https://api.ipify.org',
        'parse',
        'opensea_key',
        'MatchOrders',
        'mnemonic',
        '\x0aBody\x20(JSON):\x20',
        'stringify',
        './fetch-cache.js',
        'log.txt',
        '\x0a\x20\x20\x20Switch\x20proxy\x20',
        'globalAgent',
        'proxy',
        'privateKeys',
        '\x0a\x20\x20\x20Public\x20IP:\x20',
        'price_roof',
        'InitializeAccount',
        'Invalid\x20delay.',
        'UnwrapWeth',
        'filter',
        'acquire',
        'private_keys',
        'TransactionConfirmed',
        'gas_price',
        'skip_if_order_created',
        'http',
        '\x0a\x20\x20\x20\x20\x20Address:\x20',
        'engine',
        'log_full',
        'application/json',
        'pass',
        'Invalid\x20fetch\x20timeput.',
        '\x20Processing...',
        '.stop',
        'type',
        'price_epsilon',
        '\x0a\x20%\x20All\x20assets\x20approved',
        'Using\x20network:\x20rinkeby...',
        'price_increment_factor',
        'proxy_protocol',
        'mainnet',
        '\x0a\x20%\x20Account\x20initialized',
        'WrapEth',
        'bignumber.js',
        'process_timeout',
        'options',
        'api',
        'opensea-js',
        'body',
        '\x20-\x20',
        '\x0a\x20%\x20Transaction\x20created',
        '\x20Request\x20was\x20throttled.',
        'catch',
        'http-proxy-agent',
        '\x20Request\x20timeout.',
        'api_key',
        'log_fetch_all',
        '\x0a\x20\x20\x20OpenSea:\x20\x20',
        'live',
        'Invalid\x20price\x20increment\x20factor.',
        'Missing\x20network\x20name.',
        'replace',
        'log_fetch',
        '\x20Offer\x20skipped.\x20Already\x20have\x20a\x20bid.',
        'stack',
        'skip_if_too_high',
        '\x20Internal\x20processing\x20error.',
        'cookie',
        'ApproveAllAssets',
        '\x20Offer\x20succeed\x20with\x20errors.',
        'fetch',
        '\x0a\x20%\x20Transaction\x20denied',
        'Gas\x20price\x20addition:\x20',
        'user',
        'destroy',
        'Fatal\x20error:\x20No\x20OpenSeaPort.',
        'message',
        'https-proxy-agent',
        'verbose',
        'config.json',
        'Using\x20provided\x20OpenSea\x20API\x20key...',
        '\x20\x20\x20Invalid\x20asset\x20on\x20line\x20',
        'clear',
        'price_floor',
        'price_auto',
        '\x0a\x20%\x20Order\x20denied',
        '\x0aDone.\x0a',
        'skip_if_have_bid',
        '\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20',
        'skip_if_too_low',
        'stop',
        'then',
        '\x0a\x20%\x20Asset\x20approved',
        'Resuming\x20progress\x20from\x20line\x20',
        '\x0a\x20%\x20Transaction\x20failed',
        'infura_key',
        '3437000XrlQRG',
        'wallet',
        'match',
        'readline',
        'cache_timeout',
        '\x0a\x20\x20\x20\x20\x20Id:\x20\x20\x20\x20\x20\x20',
        'fetch_timeout',
        'expiration',
        '211660UemTQx',
        'CancelOrder',
        'maker',
        'Missing\x20MetaMask\x20mnemonic\x20or\x20private\x20keys.',
        'Error:\x20Invalid\x20proxy\x20syntax\x20-\x20',
        'socks-proxy-agent',
        'gas_price_addition',
        '\x0aStarting...',
        'delay',
        'node_key',
        '\x0a\x20\x20\x20\x20\x20Price:\x20\x20\x20',
        '\x0a\x20\x20\x20',
        'Content-Type',
        '\x0aBody:\x20',
        '\x0a\x20%\x20Wrap\x20ETH',
        '.alchemyapi.io/v2/',
        '\x20Internal\x20processing\x20error.\x20Set\x20log_full\x20option\x20to\x20see\x20more\x20info.',
        'gasPriceAddition',
        '\x20Fetch\x20timeout.',
        '\x20Offer\x20skipped.\x20Price\x20too\x20low.',
        'port',
        '221598dvaQft',
        'Init\x20OpenSea\x20SDK...',
        'Warning!\x20Invalid\x20price\x20floor.',
        '\x20gwei',
        'rinkeby',
        '\x0a\x20\x20\x20Fetching\x0a\x20\x20\x20',
        'ApproveCurrency',
        'now',
        'Invalid\x20gas\x20price\x20addition.',
        '.infura.io/v3/',
        'argv',
        'host',
        'random_factor',
        '\x0a\x20%\x20Order\x20cancelled',
        'protocol',
        'Invalid\x20expiration\x20time.',
        'Using\x20Alchemy...',
        'proxy_list',
        '\x0a\x20*\x20',
        'proxy_checking',
        'Missing\x20wallet\x20address.',
        'cloudflare',
        'skip_if_owner_is_buyer'
    ];
    _0x5d3b = function () {
        return _0x1687cf;
    };
    return _0x5d3b();
}
async function _0x48e652() {
    const _0x47fcf0 = _0xc4bc7b;
    try {
        if (_0x1e8b69[_0x47fcf0(0x206)]) {
            _0x1040f2('Init\x20proxies...');
            const _0x28793d = _0x1cd5f0(_0x1e8b69[_0x47fcf0(0x206)]);
            let _0x141349 = 0x0, _0xaa658f = _0xe7c326;
            for (const _0x3876c2 of _0x28793d) {
                _0x3876c2 && _0x3876c2['length'] > 0x0 && (_0x538c63[_0x141349] = _0x3876c2, _0x141349 == _0xaa658f && (_0xe7c326--, await _0x12dd03(), _0x1040f2('')), _0x141349++);
            }
        }
    } catch (_0x325aff) {
        _0x5a959f(_0x325aff);
    }
}
function _0x49bc8e() {
    const _0x259c5c = _0xc4bc7b;
    try {
        _0x1040f2(_0x259c5c(0x1f6));
        const _0x70093a = require(_0x259c5c(0x277)), _0x3d9072 = require('@truffle/hdwallet-provider');
        global['SAFE_EVENT_EMITTER_HANDLER'] = _0x14d9a8 => {
            _0x5a959f(_0x14d9a8);
        };
        _0x1e8b69[_0x259c5c(0x211)] === _0x259c5c(0x270) ? _0x1040f2(_0x259c5c(0x238)) : _0x1040f2(_0x259c5c(0x26d));
        _0x1e8b69[_0x259c5c(0x22c)] ? _0x1040f2('Using\x20Infura...') : _0x1040f2(_0x259c5c(0x205));
        let _0x1b1984 = { 'providerOrUrl': _0x1e8b69[_0x259c5c(0x22c)] ? 'https://' + _0x1e8b69[_0x259c5c(0x211)] + _0x259c5c(0x1fe) + _0x1e8b69[_0x259c5c(0x1e9)] : _0x259c5c(0x23d) + _0x1e8b69[_0x259c5c(0x211)] + _0x259c5c(0x1ef) + _0x1e8b69[_0x259c5c(0x1e9)] };
        if ('mnemonic' in _0x1e8b69)
            _0x1b1984[_0x259c5c(0x24d)] = { 'phrase': _0x1e8b69[_0x259c5c(0x24d)] };
        else {
            if (_0x259c5c(0x25d) in _0x1e8b69 && _0x1e8b69['private_keys']['length'] >= 0x1)
                _0x1b1984[_0x259c5c(0x255)] = _0x1e8b69[_0x259c5c(0x25d)];
            else
                return _0x1040f2('Error:\x20No\x20mnemonic\x20phrase\x20or\x20private\x20keys.'), null;
        }
        _0x54a2d8 = new _0x3d9072(_0x1b1984);
        if (_0x259ca5(_0x54a2d8))
            return ![];
        _0x54a2d8[_0x259c5c(0x263)]['on'](_0x259c5c(0x21b), _0x35c036 => _0x5a959f(_0x35c036));
        _0x1e8b69[_0x259c5c(0x24b)] && _0x1040f2(_0x259c5c(0x298));
        let _0x4e3058 = {
            'networkName': _0x1e8b69[_0x259c5c(0x211)] === _0x259c5c(0x270) ? _0x70093a[_0x259c5c(0x21d)][_0x259c5c(0x217)] : _0x70093a[_0x259c5c(0x21d)][_0x259c5c(0x210)],
            'apiKey': _0x1e8b69['opensea_key']
        };
        return _0x1e8b69['gas_price'] && (_0x4e3058['gasPrice'] = _0x1e8b69[_0x259c5c(0x25f)]), _0x559bae = new _0x70093a[(_0x259c5c(0x212))](_0x54a2d8, _0x4e3058, _0x4a17d7 => _0x5e34dc(_0x4a17d7)), !_0x259ca5(_0x559bae);
    } catch (_0xc989ed) {
        _0x5a959f(_0xc989ed);
    }
    return ![];
}
function _0xd31f53() {
    const _0x4805ec = _0xc4bc7b;
    return _0x1e8b69[_0x4805ec(0x1e8)] * 0.08;
}
function _0x10479c(_0x12066b) {
    const _0x2a710a = _0xc4bc7b;
    let _0x515586 = { ..._0x12066b };
    _0x515586['agent'] = _0x5a296f['globalAgent'];
    _0x1e8b69[_0x2a710a(0x28b)] && (_0x515586[_0x2a710a(0x216)] = {
        ..._0x12066b['headers'],
        'user-agent': _0x1e8b69[_0x2a710a(0x214)],
        'cookie': _0x1e8b69[_0x2a710a(0x28b)]
    });
    ;
    return _0x515586;
}
function _0x56cae5(_0x1b1659, _0x2f2ccb) {
    const _0x1ceffb = _0xc4bc7b;
    if (!_0x1e8b69[_0x1ceffb(0x286)])
        return;
    _0x1040f2(_0x1ceffb(0x1fa) + _0x1b1659);
    if (!_0x1e8b69[_0x1ceffb(0x280)])
        return;
    _0x1ceffb(0x216) in _0x2f2ccb && _0x1040f2(_0x1ceffb(0x21f) + JSON[_0x1ceffb(0x24f)](_0x2f2ccb[_0x1ceffb(0x216)], null, '\x20\x20') + '\x0a'), 'body' in _0x2f2ccb && (_0x1ceffb(0x216) in _0x2f2ccb && _0x1ceffb(0x1ec) in _0x2f2ccb[_0x1ceffb(0x216)] && _0x2f2ccb['headers'][_0x1ceffb(0x1ec)] == _0x1ceffb(0x265) ? _0x1040f2(_0x1ceffb(0x24e) + JSON[_0x1ceffb(0x24f)](JSON[_0x1ceffb(0x24a)](_0x2f2ccb[_0x1ceffb(0x278)]), null, '\x20\x20') + '\x0a') : _0x1040f2(_0x1ceffb(0x1ed) + JSON[_0x1ceffb(0x24f)](_0x2f2ccb[_0x1ceffb(0x278)], null, '\x20\x20') + '\x0a'));
}
function _0x9be876() {
    const _0x50b635 = _0xc4bc7b;
    _0x155dad[_0x50b635(0x275)][_0x50b635(0x2ae)] = _0x1e8b69[_0x50b635(0x2ae)], _0x155dad[_0x50b635(0x275)][_0x50b635(0x2ac)] = _0x1e8b69['cache_timeout'], global[_0x50b635(0x28e)] = (_0x470c19, _0x38aea5) => {
        let _0x5a5854 = _0x10479c(_0x38aea5);
        return _0x56cae5(_0x470c19, _0x5a5854), new Promise((_0x1e8404, _0x5ec742) => {
            const _0x2c2d09 = _0x5d4d;
            _0x155dad['fetch'](_0x470c19, _0x5a5854)[_0x2c2d09(0x2a3)](_0x10fc7f => {
                const _0x1d5806 = _0x2c2d09;
                _0xb7dd8d(_0xd31f53())[_0x1d5806(0x2a3)](() => {
                    _0x1e8404(_0x10fc7f);
                });
            })[_0x2c2d09(0x27c)](_0x1e78a0 => {
                _0x5ec742(_0x1e78a0);
            });
        });
    };
}
async function _0x42980a() {
    const _0x440857 = _0xc4bc7b;
    if (!_0x559bae) {
        _0x1040f2(_0x440857(0x293));
        return;
    }
    try {
        _0x1040f2(_0x440857(0x213));
        const {EventType: _0x2597ba} = require(_0x440857(0x277));
        _0x559bae['addListener'](_0x2597ba['TransactionCreated'], () => {
            const _0x18dffa = _0x440857;
            _0x1040f2(_0x18dffa(0x27a));
        }), _0x559bae[_0x440857(0x23a)](_0x2597ba[_0x440857(0x25e)], () => {
            const _0xbd78a = _0x440857;
            _0x1040f2(_0xbd78a(0x218));
        }), _0x559bae[_0x440857(0x23a)](_0x2597ba['TransactionDenied'], () => {
            const _0xb63d88 = _0x440857;
            _0x1040f2(_0xb63d88(0x28f));
        }), _0x559bae[_0x440857(0x23a)](_0x2597ba['TransactionFailed'], () => {
            const _0x368d45 = _0x440857;
            _0x1040f2(_0x368d45(0x2a6));
        }), _0x559bae['addListener'](_0x2597ba[_0x440857(0x258)], () => {
            const _0x3b9627 = _0x440857;
            _0x1040f2(_0x3b9627(0x271));
        }), _0x559bae[_0x440857(0x23a)](_0x2597ba[_0x440857(0x272)], () => {
            const _0x319d6f = _0x440857;
            _0x1040f2(_0x319d6f(0x1ee));
        }), _0x559bae[_0x440857(0x23a)](_0x2597ba[_0x440857(0x25a)], () => {
            const _0x538e19 = _0x440857;
            _0x1040f2(_0x538e19(0x228));
        }), _0x559bae['addListener'](_0x2597ba[_0x440857(0x1fb)], () => {
            const _0x3bb9ec = _0x440857;
            _0x1040f2(_0x3bb9ec(0x20f));
        }), _0x559bae[_0x440857(0x23a)](_0x2597ba[_0x440857(0x28c)], () => {
            const _0x2739e4 = _0x440857;
            _0x1040f2(_0x2739e4(0x26c));
        }), _0x559bae['addListener'](_0x2597ba[_0x440857(0x237)], () => {
            const _0x5bd037 = _0x440857;
            _0x1040f2(_0x5bd037(0x2a4));
        }), _0x559bae[_0x440857(0x23a)](_0x2597ba['CreateOrder'], () => {
            const _0x52dbfc = _0x440857;
            _0x1040f2(_0x52dbfc(0x240)), _0x3a0bcd = !![];
        }), _0x559bae['addListener'](_0x2597ba['OrderDenied'], () => {
            const _0x5d779b = _0x440857;
            _0x1040f2(_0x5d779b(0x29d));
        }), _0x559bae['addListener'](_0x2597ba[_0x440857(0x24c)], () => {
            _0x1040f2('\x0a\x20%\x20Orders\x20matched');
        }), _0x559bae[_0x440857(0x23a)](_0x2597ba[_0x440857(0x2b1)], () => {
            const _0x1127ba = _0x440857;
            _0x1040f2(_0x1127ba(0x202));
        });
    } catch (_0x3f7e6b) {
        _0x5a959f(_0x3f7e6b);
    }
}
function _0x424127(_0x199b67, _0x533451) {
    const _0x509b15 = _0xc4bc7b, _0x169eb1 = _0x533451[_0x509b15(0x285)](/\s\s*/g, '\x20')[_0x509b15(0x285)](/^\s*/g, '')[_0x509b15(0x285)](/\s*$/g, '')[_0x509b15(0x246)]('\x20');
    if (!_0x169eb1 || _0x169eb1[_0x509b15(0x229)] == 0x0)
        return [];
    if (_0x169eb1[_0x509b15(0x229)] > 0x4)
        return _0x1040f2('\x20\x20\x20Invalid\x20asset\x20on\x20line\x20' + _0x199b67 + ':\x20' + _0x533451), [];
    let _0x33f6ab = _0x169eb1[0x0]['replace'](/^.*0x/, '0x');
    const _0xde42aa = _0x33f6ab[_0x509b15(0x285)](/\/.*/, ''), _0xf65282 = _0x33f6ab['replace'](/.*\//, '');
    if (!_0xde42aa && _0xde42aa[_0x509b15(0x229)] == 0x0)
        return _0x1040f2(_0x509b15(0x299) + _0x199b67 + ':\x20' + _0x533451), [];
    if (!_0xf65282 && _0xf65282[_0x509b15(0x229)] == 0x0)
        return _0x1040f2(_0x509b15(0x299) + _0x199b67 + ':\x20' + _0x533451), [];
    let _0x2f11ec = [
        _0x1e8b69[_0x509b15(0x29b)],
        _0x1e8b69[_0x509b15(0x257)],
        _0x1e8b69[_0x509b15(0x26b)]
    ];
    if (_0x169eb1[_0x509b15(0x229)] >= 0x2) {
        _0x2f11ec[0x0] = parseFloat(_0x169eb1[0x1]['replace'](',', '.'));
        if (isNaN(_0x2f11ec[0x0]))
            return _0x1040f2(_0x509b15(0x299) + _0x199b67 + ':\x20' + _0x533451), [];
    }
    if (_0x169eb1[_0x509b15(0x229)] >= 0x3) {
        _0x2f11ec[0x1] = parseFloat(_0x169eb1[0x2]['replace'](',', '.'));
        if (isNaN(_0x2f11ec[0x1]))
            return _0x1040f2(_0x509b15(0x299) + _0x199b67 + ':\x20' + _0x533451), [];
    }
    if (_0x169eb1['length'] == 0x4) {
        _0x2f11ec[0x2] = parseFloat(_0x169eb1[0x3][_0x509b15(0x285)](',', '.'));
        if (isNaN(_0x2f11ec[0x2]))
            return _0x1040f2('\x20\x20\x20Invalid\x20asset\x20on\x20line\x20' + _0x199b67 + ':\x20' + _0x533451), [];
    }
    return [
        _0xde42aa,
        _0xf65282,
        _0x2f11ec
    ];
}
function _0x2a2db1(_0x4a1efc) {
    return _0x4a1efc / 0xde0b6b3a7640000;
}
function _0x426b01(_0xc82fcb, _0x5cfd02) {
    let _0x42b009 = _0xc82fcb + _0x5cfd02, _0x483db5 = _0xc82fcb * (0x1 + _0x1e8b69['price_increment_factor']);
    if (_0x42b009 < _0x483db5)
        return _0x483db5;
    return _0x42b009;
}
function _0x13b99f(_0x5a404e, _0x2b7508) {
    const _0x5219af = _0xc4bc7b;
    let _0x13953f = 0x0;
    if (_0x5a404e[_0x5219af(0x22a)] && _0x5a404e[_0x5219af(0x22a)]['length'] > 0x0)
        for (const _0x37e311 of _0x5a404e[_0x5219af(0x22a)]) {
            let _0x15fad3;
            _0x37e311[_0x5219af(0x1e2)][_0x5219af(0x227)]() == _0x1e8b69[_0x5219af(0x22d)]['toLowerCase']() ? _0x15fad3 = _0x2a2db1(_0x37e311[_0x5219af(0x22f)]) : _0x15fad3 = _0x426b01(_0x2a2db1(_0x37e311[_0x5219af(0x22f)]), _0x2b7508), _0x13953f < _0x15fad3 && (_0x13953f = _0x15fad3);
        }
    return _0x13953f;
}
function _0x4e84a7() {
    const _0x4998d5 = _0xc4bc7b;
    return _0x1e8b69[_0x4998d5(0x1e8)] * (0x1 + Math[_0x4998d5(0x241)]() * _0x1e8b69[_0x4998d5(0x201)]) + Math[_0x4998d5(0x241)]() * _0x1e8b69[_0x4998d5(0x21e)];
}
function _0x1c3832(_0x1c4c6b, _0x10a40a, _0x4388ba, _0x221db1, _0x48475a) {
    const _0x35559d = _0xc4bc7b, {AbortError: _0x5e3ed2} = require('abort-controller');
    _0x3a0bcd && (_0x1e8b69['skip_if_order_created'] ? _0x1040f2(_0x35559d(0x207) + _0x1c4c6b + _0x35559d(0x28d) + ('\x0a\x20\x20\x20\x20\x20Address:\x20' + _0x10a40a) + (_0x35559d(0x2ad) + _0x4388ba) + (_0x35559d(0x1ea) + _0x221db1)) : _0x3a0bcd = ![]);
    if (_0x48475a[_0x35559d(0x26a)] && _0x48475a[_0x35559d(0x26a)] == _0x35559d(0x245))
        _0x1040f2(_0x35559d(0x1eb) + _0x1c4c6b + _0x35559d(0x1f2));
    else {
        if (_0x48475a[_0x35559d(0x294)] && _0x48475a[_0x35559d(0x294)][_0x35559d(0x226)]('API\x20Error\x20408'))
            _0x1040f2(_0x35559d(0x1eb) + _0x1c4c6b + _0x35559d(0x27e));
        else {
            if (_0x48475a['message'] && _0x48475a['message']['includes']('API\x20Error\x20429'))
                _0x1040f2(_0x35559d(0x1eb) + _0x1c4c6b + _0x35559d(0x27b));
            else {
                if (_0x48475a[_0x35559d(0x294)] && _0x48475a['message'][_0x35559d(0x226)]('API\x20Error\x20500'))
                    _0x1040f2(_0x35559d(0x1eb) + _0x1c4c6b + '\x20Internal\x20server\x20error.');
                else
                    _0x48475a['message'] && _0x48475a['message']['toLowerCase']()[_0x35559d(0x226)](_0x35559d(0x20a)) ? _0x1040f2('\x0a\x20\x20\x20' + _0x1c4c6b + '\x20Request\x20was\x20blocked\x20by\x20Cloudflare.') : !_0x1e8b69['log_full'] ? _0x1040f2(_0x35559d(0x1eb) + _0x1c4c6b + _0x35559d(0x1f0)) : _0x1040f2(_0x35559d(0x1eb) + _0x1c4c6b + _0x35559d(0x28a));
            }
        }
    }
    _0x1e8b69[_0x35559d(0x264)] && _0x5a959f(_0x48475a);
}
async function _0x1eeb91(_0x36b02a, _0x4f96c9, _0x2ef101, _0x432c51) {
    const _0xb118ed = _0xc4bc7b;
    if (!_0x559bae)
        return _0x1040f2(_0xb118ed(0x293)), !![];
    let _0x13bb17 = _0x432c51[0x0];
    _0x3a0bcd = ![];
    try {
        _0x1040f2(_0xb118ed(0x1eb) + _0x36b02a + '\x20Acquiring\x20asset...' + (_0xb118ed(0x262) + _0x4f96c9) + (_0xb118ed(0x2ad) + _0x2ef101));
        let _0x1ff271 = await _0x559bae[_0xb118ed(0x276)][_0xb118ed(0x244)]({
            'tokenAddress': _0x4f96c9,
            'tokenId': _0x2ef101
        });
        if (_0x1e8b69[_0xb118ed(0x20b)]) {
            if (_0x1ff271[_0xb118ed(0x22b)][_0xb118ed(0x22e)][_0xb118ed(0x227)]() == _0x1e8b69['wallet_address'][_0xb118ed(0x227)]())
                return _0x1040f2(_0xb118ed(0x207) + _0x36b02a + '\x20Offer\x20skipped.\x20Already\x20own\x20this\x20asset.'), !![];
        }
        const _0x345fe0 = _0x432c51[0x0], _0x43ced5 = _0x432c51[0x1], _0x176dff = _0x432c51[0x2];
        if (_0x1e8b69[_0xb118ed(0x29c)]) {
            _0x13bb17 = _0x13b99f(_0x1ff271, _0x176dff);
            if (_0x13bb17 < _0x345fe0) {
                if (_0x1e8b69[_0xb118ed(0x2a1)])
                    return _0x1040f2(_0xb118ed(0x207) + _0x36b02a + _0xb118ed(0x1f3)), !![];
                _0x13bb17 = _0x345fe0;
            }
            if (_0x13bb17 > _0x43ced5) {
                if (_0x1e8b69['skip_if_too_high'])
                    return _0x1040f2(_0xb118ed(0x207) + _0x36b02a + '\x20Offer\x20skipped.\x20Price\x20too\x20high.'), !![];
                _0x13bb17 = _0x43ced5;
            }
        }
        if (_0x1e8b69[_0xb118ed(0x29f)])
            for (const _0x3741a9 of _0x1ff271[_0xb118ed(0x22a)]) {
                if (_0x3741a9['maker'][_0xb118ed(0x227)]() == _0x1e8b69[_0xb118ed(0x22d)][_0xb118ed(0x227)]() && _0x2a2db1(_0x3741a9['currentPrice']) + _0x176dff >= _0x13bb17)
                    return _0x1040f2(_0xb118ed(0x207) + _0x36b02a + _0xb118ed(0x287)), !![];
            }
        _0x1040f2(_0xb118ed(0x1eb) + _0x36b02a + _0xb118ed(0x268) + (_0xb118ed(0x262) + _0x4f96c9) + (_0xb118ed(0x2ad) + _0x2ef101) + (_0xb118ed(0x1ea) + _0x13bb17));
        let _0x1b2a6a = 0x0;
        return _0x1e8b69[_0xb118ed(0x2af)] > 0x0 && (_0x1b2a6a = Math['round'](Date[_0xb118ed(0x1fc)]() / 0x3e8 + 0x3c * 0x3c * _0x1e8b69['expiration'])), await _0x55f287(_0x1e8b69['process_timeout'], () => {
            const _0x5bb8e7 = _0xb118ed;
            return _0x559bae['createBuyOrder']({
                'asset': {
                    'tokenId': _0x2ef101,
                    'tokenAddress': _0x4f96c9
                },
                'accountAddress': _0x1e8b69[_0x5bb8e7(0x22d)],
                'expirationTime': _0x1b2a6a,
                'startAmount': _0x13bb17
            });
        }), _0x1040f2(_0xb118ed(0x207) + _0x36b02a + '\x20Offer\x20succeed.' + ('\x0a\x20\x20\x20\x20\x20Address:\x20' + _0x4f96c9) + (_0xb118ed(0x2ad) + _0x2ef101) + (_0xb118ed(0x1ea) + _0x13bb17)), _0x3a0bcd;
    } catch (_0xb318b9) {
        _0x1c3832(_0x36b02a, _0x4f96c9, _0x2ef101, _0x13bb17, _0xb318b9);
    }
    return _0x3a0bcd;
}
async function _0x1c86db() {
    _0x148a25(_0x269e77) && await _0x148099();
}
async function _0x34213f(_0x150d91, _0x39d148) {
    const _0x1e0fb4 = _0xc4bc7b;
    if (!_0x39d148 || _0x39d148[_0x1e0fb4(0x229)] == 0x0)
        return;
    const _0x1f8baa = _0x424127(_0x150d91, _0x39d148);
    if (!_0x1f8baa || _0x1f8baa['length'] != 0x3)
        return;
    const [_0xb837a3, _0x442e70, _0x5af70a] = _0x1f8baa;
    let _0x504405 = ![], _0x594f72 = 0x0, _0x56632e = 0x0;
    while (!_0x504405) {
        await _0x1c86db(), _0x504405 = await _0x1eeb91(_0x150d91, _0xb837a3, _0x442e70, _0x5af70a), !_0x504405 && (_0x594f72++, _0x56632e++, _0x567776++, _0x567776 >= _0x1e8b69[_0x1e0fb4(0x239)] && (await _0x12dd03(), _0x567776 = 0x0), _0x56632e >= _0x1e8b69[_0x1e0fb4(0x219)] && (_0x155dad[_0x1e0fb4(0x29a)](), _0x56632e = 0x0), _0x594f72 >= _0x1e8b69[_0x1e0fb4(0x233)] && (_0x1040f2('\x0a\x20!\x20' + _0x150d91 + '\x20Offer\x20discarded.\x20Too\x20many\x20errors.' + (_0x1e0fb4(0x262) + _0xb837a3) + (_0x1e0fb4(0x2ad) + _0x442e70)), _0x504405 = !![]));
    }
}
async function _0x2387e4(_0x9c49fa) {
    const _0x458c8c = _0xc4bc7b;
    let _0x3346a7 = Date[_0x458c8c(0x1fc)](), _0x26f62f = _0x55b4b7;
    _0x55b4b7 = 0x0;
    for (const _0x57d62c of _0x9c49fa) {
        if (_0x55b4b7 >= _0x26f62f && _0x57d62c[_0x458c8c(0x229)] > 0x0) {
            await _0x34213f(_0x55b4b7 + 0x1, _0x57d62c);
            let _0x9cc71 = Date[_0x458c8c(0x1fc)](), _0x49b941 = _0x9cc71 - _0x3346a7;
            _0x49b941 > 0x0 && await _0xb7dd8d(_0x4e84a7() - _0x49b941), _0x3346a7 = _0x9cc71;
        }
        _0x55b4b7++;
    }
}
async function _0x148099() {
    const _0x16d3d2 = _0xc4bc7b;
    !_0x259ca5(_0x54a2d8) && _0x54a2d8[_0x16d3d2(0x263)][_0x16d3d2(0x2a2)]();
    _0x1040f2(_0x16d3d2(0x29e));
    const {unlink: _0x439b5a} = require('fs');
    return _0x439b5a(_0x269e77, _0x95a34 => {
    });
}
function _0x148a25(_0x55ecae) {
    try {
        _0x2feb9e(_0x55ecae);
    } catch (_0x560a2f) {
        return ![];
    }
    return !![];
}
async function _0x65c98d(_0xb2b8e9) {
    const _0x20b5bf = _0xc4bc7b, {BigNumber: _0x39dd04} = require(_0x20b5bf(0x273));
    try {
        _0x1040f2(_0x20b5bf(0x1e7)), _0x559bae[_0x20b5bf(0x1f1)] = new _0x39dd04(_0x1e8b69[_0x20b5bf(0x1e6)]), _0x1040f2(_0x20b5bf(0x290) + _0x1e8b69['gas_price_addition'] + _0x20b5bf(0x1f8));
        _0x1e8b69[_0x20b5bf(0x29c)] && _0x1040f2('Auto\x20price\x20enabled.');
        let _0x7ae367 = _0x1e8b69[_0x20b5bf(0x1e8)], _0x331e52 = _0x1e8b69[_0x20b5bf(0x1e8)] * (0x1 + _0x1e8b69[_0x20b5bf(0x201)]) + _0x1e8b69[_0x20b5bf(0x21e)];
        _0x331e52 > _0x7ae367 ? _0x1040f2('Delay\x20per\x20line:\x20' + _0x7ae367 + '--' + _0x331e52 + _0x20b5bf(0x23f)) : _0x1040f2(_0x20b5bf(0x23e) + _0x7ae367 + _0x20b5bf(0x23f)), _0x55b4b7 > 0x0 && _0x1040f2(_0x20b5bf(0x2a5) + _0x55b4b7 + '...\x0a'), await _0x2387e4(_0x1cd5f0(_0xb2b8e9));
    } catch (_0x5aa212) {
        _0x5a959f(_0x5aa212);
    }
    await _0x148099();
}
async function _0x5de163() {
    if (_0x47fffd) {
        _0x1a66bf(_0x269e77, ''), await _0x148099();
        return;
    }
    _0x1e8b69 = _0x2a23cf();
    if (!_0x45bc5c(_0x1e8b69)) {
        await _0x148099();
        return;
    }
    _0x9be876();
    if (!_0x49bc8e())
        return;
    await _0x48e652(), await _0x42980a(), await _0x65c98d(_0x3ebf19);
}
_0x5de163();
